

================================================================
== Vivado HLS Report for 'dense_layer'
================================================================
* Date:           Thu Apr 13 02:47:19 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        cnn
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020i-clg484-1L


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+--------+----------+------------+
    |  Clock | Target | Estimated| Uncertainty|
    +--------+--------+----------+------------+
    |ap_clk  |  100.00|    86.234|        0.12|
    +--------+--------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3323|  3323|  3323|  3323|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+------+------+----------+-----------+-----------+------+----------+
        |                      |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name      |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------+------+------+----------+-----------+-----------+------+----------+
        |- memset_dense_array  |     9|     9|         1|          -|          -|    10|    no    |
        |- Loop 2              |  3230|  3230|       323|          -|          -|    10|    no    |
        | + Loop 2.1           |   320|   320|         2|          -|          -|   160|    no    |
        |- Loop 3              |    30|    30|         3|          -|          -|    10|    no    |
        |- Loop 4              |    50|    50|         5|          -|          -|    10|    no    |
        +----------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 3 
3 --> 4 7 
4 --> 5 6 
5 --> 4 
6 --> 3 
7 --> 8 10 
8 --> 9 
9 --> 7 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 10 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%dense_array = alloca [10 x float], align 16" [lib/dense.cpp:12]   --->   Operation 15 'alloca' 'dense_array' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 16 [1/1] (1.76ns)   --->   "br label %meminst"   --->   Operation 16 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%phi_ln12 = phi i4 [ 0, %0 ], [ %add_ln12, %meminst ]" [lib/dense.cpp:12]   --->   Operation 17 'phi' 'phi_ln12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.73ns)   --->   "%add_ln12 = add i4 %phi_ln12, 1" [lib/dense.cpp:12]   --->   Operation 18 'add' 'add_ln12' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i4 %phi_ln12 to i64" [lib/dense.cpp:12]   --->   Operation 19 'zext' 'zext_ln12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%dense_array_addr = getelementptr [10 x float]* %dense_array, i64 0, i64 %zext_ln12" [lib/dense.cpp:12]   --->   Operation 20 'getelementptr' 'dense_array_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (2.32ns)   --->   "store float 0.000000e+00, float* %dense_array_addr, align 4" [lib/dense.cpp:12]   --->   Operation 21 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 22 [1/1] (1.30ns)   --->   "%icmp_ln12 = icmp eq i4 %phi_ln12, -7" [lib/dense.cpp:12]   --->   Operation 22 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([19 x i8]* @memset_dense_array_s)"   --->   Operation 23 'specloopname' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 24 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %.preheader1.preheader, label %meminst" [lib/dense.cpp:12]   --->   Operation 25 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.76ns)   --->   "br label %.preheader1" [lib/dense.cpp:14]   --->   Operation 26 'br' <Predicate = (icmp_ln12)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 1.76>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%d_0 = phi i4 [ %d, %2 ], [ 0, %.preheader1.preheader ]"   --->   Operation 27 'phi' 'd_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.30ns)   --->   "%icmp_ln14 = icmp eq i4 %d_0, -6" [lib/dense.cpp:14]   --->   Operation 28 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 29 'speclooptripcount' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.73ns)   --->   "%d = add i4 %d_0, 1" [lib/dense.cpp:14]   --->   Operation 30 'add' 'd' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln14, label %.preheader2.preheader, label %.preheader.preheader" [lib/dense.cpp:14]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i4 %d_0 to i64" [lib/dense.cpp:20]   --->   Operation 32 'zext' 'zext_ln20' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i4 %d_0 to i12" [lib/dense.cpp:18]   --->   Operation 33 'zext' 'zext_ln18' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (1.76ns)   --->   "br label %.preheader" [lib/dense.cpp:18]   --->   Operation 34 'br' <Predicate = (!icmp_ln14)> <Delay = 1.76>
ST_3 : Operation 35 [1/1] (1.76ns)   --->   "br label %.preheader2" [lib/activ_fun.cpp:15->lib/dense.cpp:26]   --->   Operation 35 'br' <Predicate = (icmp_ln14)> <Delay = 1.76>

State 4 <SV = 3> <Delay = 7.04>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%w_sum_0 = phi float [ %w_sum, %1 ], [ 0.000000e+00, %.preheader.preheader ]"   --->   Operation 36 'phi' 'w_sum_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%f_0 = phi i8 [ %f, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 37 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (1.55ns)   --->   "%icmp_ln18 = icmp eq i8 %f_0, -96" [lib/dense.cpp:18]   --->   Operation 38 'icmp' 'icmp_ln18' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 160, i64 160, i64 160)"   --->   Operation 39 'speclooptripcount' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (1.91ns)   --->   "%f = add i8 %f_0, 1" [lib/dense.cpp:18]   --->   Operation 40 'add' 'f' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %icmp_ln18, label %2, label %1" [lib/dense.cpp:18]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln20_1 = zext i8 %f_0 to i64" [lib/dense.cpp:20]   --->   Operation 42 'zext' 'zext_ln20_1' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_s = call i11 @_ssdm_op_BitConcatenate.i11.i8.i3(i8 %f_0, i3 0)" [lib/dense.cpp:20]   --->   Operation 43 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln20_2 = zext i11 %tmp_s to i12" [lib/dense.cpp:20]   --->   Operation 44 'zext' 'zext_ln20_2' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_2 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %f_0, i1 false)" [lib/dense.cpp:20]   --->   Operation 45 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln20_3 = zext i9 %tmp_2 to i12" [lib/dense.cpp:20]   --->   Operation 46 'zext' 'zext_ln20_3' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln20 = add i12 %zext_ln20_3, %zext_ln20_2" [lib/dense.cpp:20]   --->   Operation 47 'add' 'add_ln20' <Predicate = (!icmp_ln18)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 48 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln20_1 = add i12 %add_ln20, %zext_ln18" [lib/dense.cpp:20]   --->   Operation 48 'add' 'add_ln20_1' <Predicate = (!icmp_ln18)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln20_4 = zext i12 %add_ln20_1 to i64" [lib/dense.cpp:20]   --->   Operation 49 'zext' 'zext_ln20_4' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%dense_weights_addr = getelementptr [1600 x float]* @dense_weights, i64 0, i64 %zext_ln20_4" [lib/dense.cpp:20]   --->   Operation 50 'getelementptr' 'dense_weights_addr' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_4 : Operation 51 [2/2] (3.25ns)   --->   "%dense_weights_load = load float* %dense_weights_addr, align 4" [lib/dense.cpp:20]   --->   Operation 51 'load' 'dense_weights_load' <Predicate = (!icmp_ln18)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10> <ROM>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%flat_array_addr = getelementptr [160 x float]* @flat_array, i64 0, i64 %zext_ln20_1" [lib/dense.cpp:20]   --->   Operation 52 'getelementptr' 'flat_array_addr' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_4 : Operation 53 [2/2] (3.25ns)   --->   "%flat_array_load = load float* %flat_array_addr, align 4" [lib/dense.cpp:20]   --->   Operation 53 'load' 'flat_array_load' <Predicate = (!icmp_ln18)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%dense_biases_addr = getelementptr inbounds [10 x float]* @dense_biases, i64 0, i64 %zext_ln20" [lib/dense.cpp:23]   --->   Operation 54 'getelementptr' 'dense_biases_addr' <Predicate = (icmp_ln18)> <Delay = 0.00>
ST_4 : Operation 55 [2/2] (3.25ns)   --->   "%dense_biases_load = load float* %dense_biases_addr, align 4" [lib/dense.cpp:23]   --->   Operation 55 'load' 'dense_biases_load' <Predicate = (icmp_ln18)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10> <ROM>

State 5 <SV = 4> <Delay = 31.4>
ST_5 : Operation 56 [1/2] (3.25ns)   --->   "%dense_weights_load = load float* %dense_weights_addr, align 4" [lib/dense.cpp:20]   --->   Operation 56 'load' 'dense_weights_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10> <ROM>
ST_5 : Operation 57 [1/2] (3.25ns)   --->   "%flat_array_load = load float* %flat_array_addr, align 4" [lib/dense.cpp:20]   --->   Operation 57 'load' 'flat_array_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_5 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node w_sum)   --->   "%tmp_9 = fmul float %dense_weights_load, %flat_array_load" [lib/dense.cpp:20]   --->   Operation 58 'fmul' 'tmp_9' <Predicate = true> <Delay = 0.00> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 0> <II = 1> <Delay = 15.4> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (28.2ns) (out node of the LUT)   --->   "%w_sum = fadd float %w_sum_0, %tmp_9" [lib/dense.cpp:20]   --->   Operation 59 'fadd' 'w_sum' <Predicate = true> <Delay = 28.2> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 0> <II = 1> <Delay = 28.2> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "br label %.preheader" [lib/dense.cpp:18]   --->   Operation 60 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 4> <Delay = 33.7>
ST_6 : Operation 61 [1/2] (3.25ns)   --->   "%dense_biases_load = load float* %dense_biases_addr, align 4" [lib/dense.cpp:23]   --->   Operation 61 'load' 'dense_biases_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10> <ROM>
ST_6 : Operation 62 [1/1] (28.2ns)   --->   "%tmp = fadd float %w_sum_0, %dense_biases_load" [lib/dense.cpp:23]   --->   Operation 62 'fadd' 'tmp' <Predicate = true> <Delay = 28.2> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 0> <II = 1> <Delay = 28.2> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%dense_array_addr_2 = getelementptr inbounds [10 x float]* %dense_array, i64 0, i64 %zext_ln20" [lib/dense.cpp:23]   --->   Operation 63 'getelementptr' 'dense_array_addr_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (2.32ns)   --->   "store float %tmp, float* %dense_array_addr_2, align 4" [lib/dense.cpp:23]   --->   Operation 64 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "br label %.preheader1" [lib/dense.cpp:14]   --->   Operation 65 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 3> <Delay = 2.32>
ST_7 : Operation 66 [1/1] (0.00ns)   --->   "%sum_0_i = phi float [ %sum, %3 ], [ 0.000000e+00, %.preheader2.preheader ]"   --->   Operation 66 'phi' 'sum_0_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "%i_0_i = phi i4 [ %i, %3 ], [ 0, %.preheader2.preheader ]"   --->   Operation 67 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (1.30ns)   --->   "%icmp_ln15 = icmp eq i4 %i_0_i, -6" [lib/activ_fun.cpp:15->lib/dense.cpp:26]   --->   Operation 68 'icmp' 'icmp_ln15' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 69 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 69 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 70 [1/1] (1.73ns)   --->   "%i = add i4 %i_0_i, 1" [lib/activ_fun.cpp:15->lib/dense.cpp:26]   --->   Operation 70 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "br i1 %icmp_ln15, label %.preheader.i.preheader, label %3" [lib/activ_fun.cpp:15->lib/dense.cpp:26]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln17 = zext i4 %i_0_i to i64" [lib/activ_fun.cpp:17->lib/dense.cpp:26]   --->   Operation 72 'zext' 'zext_ln17' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%dense_array_addr_1 = getelementptr [10 x float]* %dense_array, i64 0, i64 %zext_ln17" [lib/activ_fun.cpp:17->lib/dense.cpp:26]   --->   Operation 73 'getelementptr' 'dense_array_addr_1' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_7 : Operation 74 [2/2] (2.32ns)   --->   "%dense_array_load = load float* %dense_array_addr_1, align 4" [lib/activ_fun.cpp:17->lib/dense.cpp:26]   --->   Operation 74 'load' 'dense_array_load' <Predicate = (!icmp_ln15)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_7 : Operation 75 [1/1] (1.76ns)   --->   "br label %.preheader.i" [lib/activ_fun.cpp:20->lib/dense.cpp:26]   --->   Operation 75 'br' <Predicate = (icmp_ln15)> <Delay = 1.76>

State 8 <SV = 4> <Delay = 53.5>
ST_8 : Operation 76 [1/2] (2.32ns)   --->   "%dense_array_load = load float* %dense_array_addr_1, align 4" [lib/activ_fun.cpp:17->lib/dense.cpp:26]   --->   Operation 76 'load' 'dense_array_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_8 : Operation 77 [2/2] (51.2ns)   --->   "%tmp_i = call float @llvm.exp.f32(float %dense_array_load)" [lib/activ_fun.cpp:17->lib/dense.cpp:26]   --->   Operation 77 'fexp' 'tmp_i' <Predicate = true> <Delay = 51.2> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 1> <II = 1> <Delay = 51.2> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 9 <SV = 5> <Delay = 79.4>
ST_9 : Operation 78 [1/2] (51.2ns)   --->   "%tmp_i = call float @llvm.exp.f32(float %dense_array_load)" [lib/activ_fun.cpp:17->lib/dense.cpp:26]   --->   Operation 78 'fexp' 'tmp_i' <Predicate = true> <Delay = 51.2> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 1> <II = 1> <Delay = 51.2> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>
ST_9 : Operation 79 [1/1] (28.2ns)   --->   "%sum = fadd float %sum_0_i, %tmp_i" [lib/activ_fun.cpp:17->lib/dense.cpp:26]   --->   Operation 79 'fadd' 'sum' <Predicate = true> <Delay = 28.2> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 0> <II = 1> <Delay = 28.2> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 80 [1/1] (0.00ns)   --->   "br label %.preheader2" [lib/activ_fun.cpp:15->lib/dense.cpp:26]   --->   Operation 80 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 4> <Delay = 2.32>
ST_10 : Operation 81 [1/1] (0.00ns)   --->   "%j_0_i = phi i4 [ %j, %4 ], [ 0, %.preheader.i.preheader ]"   --->   Operation 81 'phi' 'j_0_i' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 82 [1/1] (1.30ns)   --->   "%icmp_ln20 = icmp eq i4 %j_0_i, -6" [lib/activ_fun.cpp:20->lib/dense.cpp:26]   --->   Operation 82 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 83 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 83 'speclooptripcount' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 84 [1/1] (1.73ns)   --->   "%j = add i4 %j_0_i, 1" [lib/activ_fun.cpp:20->lib/dense.cpp:26]   --->   Operation 84 'add' 'j' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 85 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20, label %soft_max.exit, label %4" [lib/activ_fun.cpp:20->lib/dense.cpp:26]   --->   Operation 85 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i4 %j_0_i to i64" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 86 'zext' 'zext_ln22' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_10 : Operation 87 [1/1] (0.00ns)   --->   "%dense_array_addr_3 = getelementptr [10 x float]* %dense_array, i64 0, i64 %zext_ln22" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 87 'getelementptr' 'dense_array_addr_3' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_10 : Operation 88 [2/2] (2.32ns)   --->   "%dense_array_load_1 = load float* %dense_array_addr_3, align 4" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 88 'load' 'dense_array_load_1' <Predicate = (!icmp_ln20)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_10 : Operation 89 [1/1] (0.00ns)   --->   "ret void" [lib/dense.cpp:27]   --->   Operation 89 'ret' <Predicate = (icmp_ln20)> <Delay = 0.00>

State 11 <SV = 5> <Delay = 53.5>
ST_11 : Operation 90 [1/2] (2.32ns)   --->   "%dense_array_load_1 = load float* %dense_array_addr_3, align 4" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 90 'load' 'dense_array_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_11 : Operation 91 [2/2] (51.2ns)   --->   "%tmp_2_i = call float @llvm.exp.f32(float %dense_array_load_1)" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 91 'fexp' 'tmp_2_i' <Predicate = true> <Delay = 51.2> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 1> <II = 1> <Delay = 51.2> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 12 <SV = 6> <Delay = 51.2>
ST_12 : Operation 92 [1/2] (51.2ns)   --->   "%tmp_2_i = call float @llvm.exp.f32(float %dense_array_load_1)" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 92 'fexp' 'tmp_2_i' <Predicate = true> <Delay = 51.2> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 1> <II = 1> <Delay = 51.2> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 13 <SV = 7> <Delay = 83.9>
ST_13 : Operation 93 [2/2] (83.9ns)   --->   "%tmp_3_i = fdiv float %tmp_2_i, %sum_0_i" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 93 'fdiv' 'tmp_3_i' <Predicate = true> <Delay = 83.9> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 1> <II = 1> <Delay = 83.9> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 8> <Delay = 86.2>
ST_14 : Operation 94 [1/2] (83.9ns)   --->   "%tmp_3_i = fdiv float %tmp_2_i, %sum_0_i" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 94 'fdiv' 'tmp_3_i' <Predicate = true> <Delay = 83.9> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 1> <II = 1> <Delay = 83.9> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 95 [1/1] (0.00ns)   --->   "%prediction_addr = getelementptr [10 x float]* %prediction, i64 0, i64 %zext_ln22" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 95 'getelementptr' 'prediction_addr' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 96 [1/1] (2.32ns)   --->   "store float %tmp_3_i, float* %prediction_addr, align 4" [lib/activ_fun.cpp:22->lib/dense.cpp:26]   --->   Operation 96 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_14 : Operation 97 [1/1] (0.00ns)   --->   "br label %.preheader.i" [lib/activ_fun.cpp:20->lib/dense.cpp:26]   --->   Operation 97 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 100ns, clock uncertainty: 0.12ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('phi_ln12', lib/dense.cpp:12) with incoming values : ('add_ln12', lib/dense.cpp:12) [8]  (1.77 ns)

 <State 2>: 2.32ns
The critical path consists of the following:
	'phi' operation ('phi_ln12', lib/dense.cpp:12) with incoming values : ('add_ln12', lib/dense.cpp:12) [8]  (0 ns)
	'getelementptr' operation ('dense_array_addr', lib/dense.cpp:12) [11]  (0 ns)
	'store' operation ('store_ln12', lib/dense.cpp:12) of constant 0 on array 'dense_array', lib/dense.cpp:12 [12]  (2.32 ns)

 <State 3>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('w_sum') with incoming values : ('w_sum', lib/dense.cpp:20) [30]  (1.77 ns)

 <State 4>: 7.04ns
The critical path consists of the following:
	'phi' operation ('f') with incoming values : ('f', lib/dense.cpp:18) [31]  (0 ns)
	'add' operation ('add_ln20', lib/dense.cpp:20) [42]  (0 ns)
	'add' operation ('add_ln20_1', lib/dense.cpp:20) [43]  (3.79 ns)
	'getelementptr' operation ('dense_weights_addr', lib/dense.cpp:20) [45]  (0 ns)
	'load' operation ('dense_weights_load', lib/dense.cpp:20) on array 'dense_weights' [46]  (3.25 ns)

 <State 5>: 31.5ns
The critical path consists of the following:
	'load' operation ('dense_weights_load', lib/dense.cpp:20) on array 'dense_weights' [46]  (3.25 ns)
	'fmul' operation ('tmp_9', lib/dense.cpp:20) [49]  (0 ns)
	'fadd' operation ('w_sum', lib/dense.cpp:20) [50]  (28.2 ns)

 <State 6>: 33.8ns
The critical path consists of the following:
	'load' operation ('dense_biases_load', lib/dense.cpp:23) on array 'dense_biases' [54]  (3.25 ns)
	'fadd' operation ('tmp', lib/dense.cpp:23) [55]  (28.2 ns)
	'store' operation ('store_ln23', lib/dense.cpp:23) of variable 'tmp', lib/dense.cpp:23 on array 'dense_array', lib/dense.cpp:12 [57]  (2.32 ns)

 <State 7>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', lib/activ_fun.cpp:15->lib/dense.cpp:26) [63]  (0 ns)
	'getelementptr' operation ('dense_array_addr_1', lib/activ_fun.cpp:17->lib/dense.cpp:26) [70]  (0 ns)
	'load' operation ('dense_array_load', lib/activ_fun.cpp:17->lib/dense.cpp:26) on array 'dense_array', lib/dense.cpp:12 [71]  (2.32 ns)

 <State 8>: 53.6ns
The critical path consists of the following:
	'load' operation ('dense_array_load', lib/activ_fun.cpp:17->lib/dense.cpp:26) on array 'dense_array', lib/dense.cpp:12 [71]  (2.32 ns)
	'fexp' operation ('tmp_i', lib/activ_fun.cpp:17->lib/dense.cpp:26) [72]  (51.2 ns)

 <State 9>: 79.5ns
The critical path consists of the following:
	'fexp' operation ('tmp_i', lib/activ_fun.cpp:17->lib/dense.cpp:26) [72]  (51.2 ns)
	'fadd' operation ('sum', lib/activ_fun.cpp:17->lib/dense.cpp:26) [73]  (28.2 ns)

 <State 10>: 2.32ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', lib/activ_fun.cpp:20->lib/dense.cpp:26) [78]  (0 ns)
	'getelementptr' operation ('dense_array_addr_3', lib/activ_fun.cpp:22->lib/dense.cpp:26) [85]  (0 ns)
	'load' operation ('dense_array_load_1', lib/activ_fun.cpp:22->lib/dense.cpp:26) on array 'dense_array', lib/dense.cpp:12 [86]  (2.32 ns)

 <State 11>: 53.6ns
The critical path consists of the following:
	'load' operation ('dense_array_load_1', lib/activ_fun.cpp:22->lib/dense.cpp:26) on array 'dense_array', lib/dense.cpp:12 [86]  (2.32 ns)
	'fexp' operation ('tmp_2_i', lib/activ_fun.cpp:22->lib/dense.cpp:26) [87]  (51.2 ns)

 <State 12>: 51.2ns
The critical path consists of the following:
	'fexp' operation ('tmp_2_i', lib/activ_fun.cpp:22->lib/dense.cpp:26) [87]  (51.2 ns)

 <State 13>: 83.9ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3_i', lib/activ_fun.cpp:22->lib/dense.cpp:26) [88]  (83.9 ns)

 <State 14>: 86.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3_i', lib/activ_fun.cpp:22->lib/dense.cpp:26) [88]  (83.9 ns)
	'store' operation ('store_ln22', lib/activ_fun.cpp:22->lib/dense.cpp:26) of variable 'tmp_3_i', lib/activ_fun.cpp:22->lib/dense.cpp:26 on array 'prediction' [90]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
