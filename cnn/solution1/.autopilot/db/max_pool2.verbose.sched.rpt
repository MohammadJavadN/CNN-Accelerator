

================================================================
== Vivado HLS Report for 'max_pool2'
================================================================
* Date:           Thu Apr 13 22:43:58 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        cnn
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-3


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     5.380|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  233|  233|  233|  233|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                     |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1             |  232|  232|        58|          -|          -|     4|    no    |
        | + Loop 1.1          |   56|   56|        14|          -|          -|     4|    no    |
        |  ++ Loop 1.1.1      |   12|   12|         6|          -|          -|     2|    no    |
        |   +++ Loop 1.1.1.1  |    4|    4|         2|          -|          -|     2|    no    |
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 4 
6 --> 5 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.17>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%b_V_read = call i9 @_ssdm_op_Read.ap_auto.i9(i9 %b_V)"   --->   Operation 7 'read' 'b_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%feature_V_offset_rea = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %feature_V_offset)"   --->   Operation 8 'read' 'feature_V_offset_rea' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%b_V_cast = sext i9 %b_V_read to i14"   --->   Operation 9 'sext' 'b_V_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sext_ln703 = sext i9 %b_V_read to i13" [lib/pool.cpp:26]   --->   Operation 10 'sext' 'sext_ln703' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.17ns)   --->   "br label %1" [lib/pool.cpp:13]   --->   Operation 11 'br' <Predicate = true> <Delay = 1.17>

State 2 <SV = 1> <Delay = 1.17>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%r_0 = phi i4 [ 0, %0 ], [ %r, %2 ]"   --->   Operation 12 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %r_0, i32 3)" [lib/pool.cpp:13]   --->   Operation 13 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 14 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "br i1 %tmp_8, label %3, label %.preheader73.preheader" [lib/pool.cpp:13]   --->   Operation 15 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%trunc_ln26_1 = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %r_0, i32 1, i32 2)" [lib/pool.cpp:26]   --->   Operation 16 'partselect' 'trunc_ln26_1' <Predicate = (!tmp_8)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.17ns)   --->   "br label %.preheader73" [lib/pool.cpp:15]   --->   Operation 17 'br' <Predicate = (!tmp_8)> <Delay = 1.17>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "ret void" [lib/pool.cpp:29]   --->   Operation 18 'ret' <Predicate = (tmp_8)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.40>
ST_3 : Operation 19 [1/1] (0.00ns)   --->   "%c_0 = phi i4 [ %c, %_ZN13ap_fixed_baseILi15ELi7ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi14ELi6ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i ], [ 0, %.preheader73.preheader ]"   --->   Operation 19 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %c_0, i32 3)" [lib/pool.cpp:15]   --->   Operation 20 'bitselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%empty_36 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 21 'speclooptripcount' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "br i1 %tmp_9, label %2, label %ap_fixed_base.1.exit.preheader" [lib/pool.cpp:15]   --->   Operation 22 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (1.17ns)   --->   "br label %ap_fixed_base.1.exit" [lib/pool.cpp:19]   --->   Operation 23 'br' <Predicate = (!tmp_9)> <Delay = 1.17>
ST_3 : Operation 24 [1/1] (1.40ns)   --->   "%r = add i4 %r_0, 2" [lib/pool.cpp:13]   --->   Operation 24 'add' 'r' <Predicate = (tmp_9)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "br label %1" [lib/pool.cpp:13]   --->   Operation 25 'br' <Predicate = (tmp_9)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.03>
ST_4 : Operation 26 [1/1] (0.00ns)   --->   "%p_Val2_s = phi i14 [ %pool_1, %ap_fixed_base.1.exit.loopexit ], [ 0, %ap_fixed_base.1.exit.preheader ]" [lib/pool.cpp:22]   --->   Operation 26 'phi' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "%pr_0 = phi i2 [ %pr, %ap_fixed_base.1.exit.loopexit ], [ 0, %ap_fixed_base.1.exit.preheader ]"   --->   Operation 27 'phi' 'pr_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i2 %pr_0 to i4" [lib/pool.cpp:19]   --->   Operation 28 'zext' 'zext_ln19' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 29 [1/1] (0.70ns)   --->   "%icmp_ln19 = icmp eq i2 %pr_0, -2" [lib/pool.cpp:19]   --->   Operation 29 'icmp' 'icmp_ln19' <Predicate = true> <Delay = 0.70> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 30 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 30 'speclooptripcount' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 31 [1/1] (1.14ns)   --->   "%pr = add i2 %pr_0, 1" [lib/pool.cpp:19]   --->   Operation 31 'add' 'pr' <Predicate = true> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "br i1 %icmp_ln19, label %_ZN13ap_fixed_baseILi15ELi7ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi14ELi6ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i, label %.preheader.preheader" [lib/pool.cpp:19]   --->   Operation 32 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (1.40ns)   --->   "%add_ln22 = add i4 %r_0, %zext_ln19" [lib/pool.cpp:22]   --->   Operation 33 'add' 'add_ln22' <Predicate = (!icmp_ln19)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_2 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %add_ln22, i3 0)" [lib/pool.cpp:22]   --->   Operation 34 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln20_1 = zext i7 %tmp_2 to i8" [lib/pool.cpp:20]   --->   Operation 35 'zext' 'zext_ln20_1' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (1.17ns)   --->   "br label %.preheader" [lib/pool.cpp:20]   --->   Operation 36 'br' <Predicate = (!icmp_ln19)> <Delay = 1.17>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln26_3 = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %c_0, i32 1, i32 2)" [lib/pool.cpp:26]   --->   Operation 37 'partselect' 'trunc_ln26_3' <Predicate = (icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_BitConcatenate.i8.i4.i2.i2(i4 %feature_V_offset_rea, i2 %trunc_ln26_1, i2 %trunc_ln26_3)" [lib/pool.cpp:26]   --->   Operation 38 'bitconcatenate' 'tmp' <Predicate = (icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i8 %tmp to i64" [lib/pool.cpp:26]   --->   Operation 39 'zext' 'zext_ln203' <Predicate = (icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%pool_feature_V_addr = getelementptr [160 x i13]* %pool_feature_V, i64 0, i64 %zext_ln203" [lib/pool.cpp:26]   --->   Operation 40 'getelementptr' 'pool_feature_V_addr' <Predicate = (icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln703 = trunc i14 %p_Val2_s to i13" [lib/pool.cpp:26]   --->   Operation 41 'trunc' 'trunc_ln703' <Predicate = (icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (1.63ns)   --->   "%add_ln703 = add i14 %p_Val2_s, %b_V_cast" [lib/pool.cpp:26]   --->   Operation 42 'add' 'add_ln703' <Predicate = (icmp_ln19)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (1.63ns)   --->   "%add_ln1494 = add i13 %sext_ln703, %trunc_ln703" [lib/activ_fun.cpp:5->lib/pool.cpp:26]   --->   Operation 43 'add' 'add_ln1494' <Predicate = (icmp_ln19)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (1.66ns)   --->   "%icmp_ln1494_1 = icmp sgt i14 %add_ln703, 0" [lib/activ_fun.cpp:5->lib/pool.cpp:26]   --->   Operation 44 'icmp' 'icmp_ln1494_1' <Predicate = (icmp_ln19)> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (0.53ns)   --->   "%select_ln6 = select i1 %icmp_ln1494_1, i13 %add_ln1494, i13 0" [lib/activ_fun.cpp:6->lib/pool.cpp:26]   --->   Operation 45 'select' 'select_ln6' <Predicate = (icmp_ln19)> <Delay = 0.53> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.53> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (1.20ns)   --->   "store i13 %select_ln6, i13* %pool_feature_V_addr, align 2" [lib/pool.cpp:26]   --->   Operation 46 'store' <Predicate = (icmp_ln19)> <Delay = 1.20> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_4 : Operation 47 [1/1] (1.40ns)   --->   "%c = add i4 2, %c_0" [lib/pool.cpp:15]   --->   Operation 47 'add' 'c' <Predicate = (icmp_ln19)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "br label %.preheader73" [lib/pool.cpp:15]   --->   Operation 48 'br' <Predicate = (icmp_ln19)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 4.54>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%pool_1 = phi i14 [ %p_Val2_s, %.preheader.preheader ], [ %select_ln22, %._crit_edge ]"   --->   Operation 49 'phi' 'pool_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%pc_0 = phi i2 [ 0, %.preheader.preheader ], [ %pc, %._crit_edge ]"   --->   Operation 50 'phi' 'pc_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i2 %pc_0 to i4" [lib/pool.cpp:20]   --->   Operation 51 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.70ns)   --->   "%icmp_ln20 = icmp eq i2 %pc_0, -2" [lib/pool.cpp:20]   --->   Operation 52 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 0.70> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 53 'speclooptripcount' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (1.14ns)   --->   "%pc = add i2 %pc_0, 1" [lib/pool.cpp:20]   --->   Operation 54 'add' 'pc' <Predicate = true> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20, label %ap_fixed_base.1.exit.loopexit, label %._crit_edge" [lib/pool.cpp:20]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (1.40ns)   --->   "%add_ln22_1 = add i4 %zext_ln20, %c_0" [lib/pool.cpp:22]   --->   Operation 56 'add' 'add_ln22_1' <Predicate = (!icmp_ln20)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln1494 = zext i4 %add_ln22_1 to i8" [lib/pool.cpp:22]   --->   Operation 57 'zext' 'zext_ln1494' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (1.57ns)   --->   "%add_ln1494_1 = add i8 %zext_ln20_1, %zext_ln1494" [lib/pool.cpp:22]   --->   Operation 58 'add' 'add_ln1494_1' <Predicate = (!icmp_ln20)> <Delay = 1.57> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln1494_1 = zext i8 %add_ln1494_1 to i64" [lib/pool.cpp:22]   --->   Operation 59 'zext' 'zext_ln1494_1' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%feature_0_V_addr = getelementptr [64 x i14]* %feature_0_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 60 'getelementptr' 'feature_0_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%feature_1_V_addr = getelementptr [64 x i14]* %feature_1_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 61 'getelementptr' 'feature_1_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%feature_2_V_addr = getelementptr [64 x i14]* %feature_2_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 62 'getelementptr' 'feature_2_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%feature_3_V_addr = getelementptr [64 x i14]* %feature_3_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 63 'getelementptr' 'feature_3_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%feature_4_V_addr = getelementptr [64 x i14]* %feature_4_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 64 'getelementptr' 'feature_4_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%feature_5_V_addr = getelementptr [64 x i14]* %feature_5_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 65 'getelementptr' 'feature_5_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%feature_6_V_addr = getelementptr [64 x i14]* %feature_6_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 66 'getelementptr' 'feature_6_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%feature_7_V_addr = getelementptr [64 x i14]* %feature_7_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 67 'getelementptr' 'feature_7_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%feature_8_V_addr = getelementptr [64 x i14]* %feature_8_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 68 'getelementptr' 'feature_8_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%feature_9_V_addr = getelementptr [64 x i14]* %feature_9_V, i64 0, i64 %zext_ln1494_1" [lib/pool.cpp:22]   --->   Operation 69 'getelementptr' 'feature_9_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 70 [2/2] (1.56ns)   --->   "%feature_0_V_load = load i14* %feature_0_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 70 'load' 'feature_0_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 71 [2/2] (1.56ns)   --->   "%feature_1_V_load = load i14* %feature_1_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 71 'load' 'feature_1_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 72 [2/2] (1.56ns)   --->   "%feature_2_V_load = load i14* %feature_2_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 72 'load' 'feature_2_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 73 [2/2] (1.56ns)   --->   "%feature_3_V_load = load i14* %feature_3_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 73 'load' 'feature_3_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 74 [2/2] (1.56ns)   --->   "%feature_4_V_load = load i14* %feature_4_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 74 'load' 'feature_4_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 75 [2/2] (1.56ns)   --->   "%feature_5_V_load = load i14* %feature_5_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 75 'load' 'feature_5_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 76 [2/2] (1.56ns)   --->   "%feature_6_V_load = load i14* %feature_6_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 76 'load' 'feature_6_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 77 [2/2] (1.56ns)   --->   "%feature_7_V_load = load i14* %feature_7_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 77 'load' 'feature_7_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 78 [2/2] (1.56ns)   --->   "%feature_8_V_load = load i14* %feature_8_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 78 'load' 'feature_8_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 79 [2/2] (1.56ns)   --->   "%feature_9_V_load = load i14* %feature_9_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 79 'load' 'feature_9_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "br label %ap_fixed_base.1.exit"   --->   Operation 80 'br' <Predicate = (icmp_ln20)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 5.37>
ST_6 : Operation 81 [1/2] (1.56ns)   --->   "%feature_0_V_load = load i14* %feature_0_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 81 'load' 'feature_0_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 82 [1/2] (1.56ns)   --->   "%feature_1_V_load = load i14* %feature_1_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 82 'load' 'feature_1_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 83 [1/2] (1.56ns)   --->   "%feature_2_V_load = load i14* %feature_2_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 83 'load' 'feature_2_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 84 [1/2] (1.56ns)   --->   "%feature_3_V_load = load i14* %feature_3_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 84 'load' 'feature_3_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 85 [1/2] (1.56ns)   --->   "%feature_4_V_load = load i14* %feature_4_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 85 'load' 'feature_4_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 86 [1/2] (1.56ns)   --->   "%feature_5_V_load = load i14* %feature_5_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 86 'load' 'feature_5_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 87 [1/2] (1.56ns)   --->   "%feature_6_V_load = load i14* %feature_6_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 87 'load' 'feature_6_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 88 [1/2] (1.56ns)   --->   "%feature_7_V_load = load i14* %feature_7_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 88 'load' 'feature_7_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 89 [1/2] (1.56ns)   --->   "%feature_8_V_load = load i14* %feature_8_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 89 'load' 'feature_8_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 90 [1/2] (1.56ns)   --->   "%feature_9_V_load = load i14* %feature_9_V_addr, align 2" [lib/pool.cpp:22]   --->   Operation 90 'load' 'feature_9_V_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 13> <Depth = 160> <RAM>
ST_6 : Operation 91 [1/1] (1.59ns)   --->   "%pool_V = call i14 @_ssdm_op_Mux.ap_auto.10i14.i4(i14 %feature_0_V_load, i14 %feature_1_V_load, i14 %feature_2_V_load, i14 %feature_3_V_load, i14 %feature_4_V_load, i14 %feature_5_V_load, i14 %feature_6_V_load, i14 %feature_7_V_load, i14 %feature_8_V_load, i14 %feature_9_V_load, i4 %feature_V_offset_rea)" [lib/pool.cpp:22]   --->   Operation 91 'mux' 'pool_V' <Predicate = true> <Delay = 1.59> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.59> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 92 [1/1] (1.66ns)   --->   "%icmp_ln1494 = icmp sgt i14 %pool_V, %pool_1" [lib/pool.cpp:22]   --->   Operation 92 'icmp' 'icmp_ln1494' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 93 [1/1] (0.55ns)   --->   "%select_ln22 = select i1 %icmp_ln1494, i14 %pool_V, i14 %pool_1" [lib/pool.cpp:22]   --->   Operation 93 'select' 'select_ln22' <Predicate = true> <Delay = 0.55> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.53> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "br label %.preheader" [lib/pool.cpp:20]   --->   Operation 94 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('r') with incoming values : ('r', lib/pool.cpp:13) [20]  (1.18 ns)

 <State 2>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('c') with incoming values : ('c', lib/pool.cpp:15) [28]  (1.18 ns)

 <State 3>: 1.41ns
The critical path consists of the following:
	'add' operation ('r', lib/pool.cpp:13) [100]  (1.41 ns)

 <State 4>: 5.04ns
The critical path consists of the following:
	'phi' operation ('__Val2__', lib/pool.cpp:22) with incoming values : ('select_ln22', lib/pool.cpp:22) [35]  (0 ns)
	'add' operation ('add_ln703', lib/pool.cpp:26) [92]  (1.63 ns)
	'icmp' operation ('icmp_ln1494_1', lib/activ_fun.cpp:5->lib/pool.cpp:26) [94]  (1.66 ns)
	'select' operation ('select_ln6', lib/activ_fun.cpp:6->lib/pool.cpp:26) [95]  (0.535 ns)
	'store' operation ('store_ln26', lib/pool.cpp:26) of variable 'select_ln6', lib/activ_fun.cpp:6->lib/pool.cpp:26 on array 'pool_feature_V' [96]  (1.21 ns)

 <State 5>: 4.54ns
The critical path consists of the following:
	'phi' operation ('pc') with incoming values : ('pc', lib/pool.cpp:20) [49]  (0 ns)
	'add' operation ('add_ln22_1', lib/pool.cpp:22) [56]  (1.41 ns)
	'add' operation ('add_ln1494_1', lib/pool.cpp:22) [58]  (1.57 ns)
	'getelementptr' operation ('feature_0_V_addr', lib/pool.cpp:22) [60]  (0 ns)
	'load' operation ('feature_0_V_load', lib/pool.cpp:22) on array 'feature_0_V' [70]  (1.57 ns)

 <State 6>: 5.38ns
The critical path consists of the following:
	'load' operation ('feature_0_V_load', lib/pool.cpp:22) on array 'feature_0_V' [70]  (1.57 ns)
	'mux' operation ('pool.V', lib/pool.cpp:22) [80]  (1.6 ns)
	'icmp' operation ('icmp_ln1494', lib/pool.cpp:22) [81]  (1.66 ns)
	'select' operation ('select_ln22', lib/pool.cpp:22) [82]  (0.552 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
