// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "makeItZero.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic makeItZero::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic makeItZero::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> makeItZero::ap_ST_fsm_state1 = "1";
const sc_lv<4> makeItZero::ap_ST_fsm_state2 = "10";
const sc_lv<4> makeItZero::ap_ST_fsm_state3 = "100";
const sc_lv<4> makeItZero::ap_ST_fsm_state4 = "1000";
const sc_lv<32> makeItZero::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> makeItZero::ap_const_lv32_1 = "1";
const sc_lv<32> makeItZero::ap_const_lv32_2 = "10";
const sc_lv<1> makeItZero::ap_const_lv1_0 = "0";
const sc_lv<32> makeItZero::ap_const_lv32_3 = "11";
const sc_lv<4> makeItZero::ap_const_lv4_0 = "0000";
const sc_lv<1> makeItZero::ap_const_lv1_1 = "1";
const sc_lv<4> makeItZero::ap_const_lv4_8 = "1000";
const sc_lv<15> makeItZero::ap_const_lv15_0 = "000000000000000";
const sc_lv<4> makeItZero::ap_const_lv4_7 = "111";
const sc_lv<4> makeItZero::ap_const_lv4_6 = "110";
const sc_lv<4> makeItZero::ap_const_lv4_5 = "101";
const sc_lv<4> makeItZero::ap_const_lv4_4 = "100";
const sc_lv<4> makeItZero::ap_const_lv4_3 = "11";
const sc_lv<4> makeItZero::ap_const_lv4_2 = "10";
const sc_lv<4> makeItZero::ap_const_lv4_1 = "1";
const sc_lv<4> makeItZero::ap_const_lv4_A = "1010";
const sc_lv<3> makeItZero::ap_const_lv3_0 = "000";
const bool makeItZero::ap_const_boolean_1 = true;

makeItZero::makeItZero(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_0_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_0_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_0_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_0_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_A_1_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_1_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_1_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_1_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_A_2_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_2_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_2_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_2_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_A_3_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_3_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_3_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_3_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_A_4_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_4_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_4_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_4_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_A_5_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_5_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_5_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_5_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_A_6_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_6_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_6_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_6_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_A_7_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_7_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_7_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_7_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_A_8_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_8_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_8_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_8_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_A_9_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_5_fu_285_p1 );

    SC_METHOD(thread_A_9_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_9_V_d0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_9_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_194 );
    sensitive << ( icmp_ln7_fu_264_p2 );

    SC_METHOD(thread_add_ln203_fu_280_p2);
    sensitive << ( zext_ln7_reg_315 );
    sensitive << ( zext_ln203_fu_276_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln5_fu_228_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln5_fu_228_p2 );

    SC_METHOD(thread_col_fu_270_p2);
    sensitive << ( col_0_reg_217 );

    SC_METHOD(thread_f_fu_234_p2);
    sensitive << ( f_0_reg_194 );

    SC_METHOD(thread_icmp_ln5_fu_228_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( f_0_reg_194 );

    SC_METHOD(thread_icmp_ln6_fu_240_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( row_0_reg_206 );

    SC_METHOD(thread_icmp_ln7_fu_264_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( col_0_reg_217 );

    SC_METHOD(thread_row_fu_246_p2);
    sensitive << ( row_0_reg_206 );

    SC_METHOD(thread_tmp_fu_252_p3);
    sensitive << ( row_0_reg_206 );

    SC_METHOD(thread_zext_ln203_5_fu_285_p1);
    sensitive << ( add_ln203_fu_280_p2 );

    SC_METHOD(thread_zext_ln203_fu_276_p1);
    sensitive << ( col_0_reg_217 );

    SC_METHOD(thread_zext_ln7_fu_260_p1);
    sensitive << ( tmp_fu_252_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln6_fu_240_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln7_fu_264_p2 );
    sensitive << ( icmp_ln5_fu_228_p2 );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "makeItZero_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_0_V_address0, "(port)A_0_V_address0");
    sc_trace(mVcdFile, A_0_V_ce0, "(port)A_0_V_ce0");
    sc_trace(mVcdFile, A_0_V_we0, "(port)A_0_V_we0");
    sc_trace(mVcdFile, A_0_V_d0, "(port)A_0_V_d0");
    sc_trace(mVcdFile, A_1_V_address0, "(port)A_1_V_address0");
    sc_trace(mVcdFile, A_1_V_ce0, "(port)A_1_V_ce0");
    sc_trace(mVcdFile, A_1_V_we0, "(port)A_1_V_we0");
    sc_trace(mVcdFile, A_1_V_d0, "(port)A_1_V_d0");
    sc_trace(mVcdFile, A_2_V_address0, "(port)A_2_V_address0");
    sc_trace(mVcdFile, A_2_V_ce0, "(port)A_2_V_ce0");
    sc_trace(mVcdFile, A_2_V_we0, "(port)A_2_V_we0");
    sc_trace(mVcdFile, A_2_V_d0, "(port)A_2_V_d0");
    sc_trace(mVcdFile, A_3_V_address0, "(port)A_3_V_address0");
    sc_trace(mVcdFile, A_3_V_ce0, "(port)A_3_V_ce0");
    sc_trace(mVcdFile, A_3_V_we0, "(port)A_3_V_we0");
    sc_trace(mVcdFile, A_3_V_d0, "(port)A_3_V_d0");
    sc_trace(mVcdFile, A_4_V_address0, "(port)A_4_V_address0");
    sc_trace(mVcdFile, A_4_V_ce0, "(port)A_4_V_ce0");
    sc_trace(mVcdFile, A_4_V_we0, "(port)A_4_V_we0");
    sc_trace(mVcdFile, A_4_V_d0, "(port)A_4_V_d0");
    sc_trace(mVcdFile, A_5_V_address0, "(port)A_5_V_address0");
    sc_trace(mVcdFile, A_5_V_ce0, "(port)A_5_V_ce0");
    sc_trace(mVcdFile, A_5_V_we0, "(port)A_5_V_we0");
    sc_trace(mVcdFile, A_5_V_d0, "(port)A_5_V_d0");
    sc_trace(mVcdFile, A_6_V_address0, "(port)A_6_V_address0");
    sc_trace(mVcdFile, A_6_V_ce0, "(port)A_6_V_ce0");
    sc_trace(mVcdFile, A_6_V_we0, "(port)A_6_V_we0");
    sc_trace(mVcdFile, A_6_V_d0, "(port)A_6_V_d0");
    sc_trace(mVcdFile, A_7_V_address0, "(port)A_7_V_address0");
    sc_trace(mVcdFile, A_7_V_ce0, "(port)A_7_V_ce0");
    sc_trace(mVcdFile, A_7_V_we0, "(port)A_7_V_we0");
    sc_trace(mVcdFile, A_7_V_d0, "(port)A_7_V_d0");
    sc_trace(mVcdFile, A_8_V_address0, "(port)A_8_V_address0");
    sc_trace(mVcdFile, A_8_V_ce0, "(port)A_8_V_ce0");
    sc_trace(mVcdFile, A_8_V_we0, "(port)A_8_V_we0");
    sc_trace(mVcdFile, A_8_V_d0, "(port)A_8_V_d0");
    sc_trace(mVcdFile, A_9_V_address0, "(port)A_9_V_address0");
    sc_trace(mVcdFile, A_9_V_ce0, "(port)A_9_V_ce0");
    sc_trace(mVcdFile, A_9_V_we0, "(port)A_9_V_we0");
    sc_trace(mVcdFile, A_9_V_d0, "(port)A_9_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, f_fu_234_p2, "f_fu_234_p2");
    sc_trace(mVcdFile, f_reg_302, "f_reg_302");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, row_fu_246_p2, "row_fu_246_p2");
    sc_trace(mVcdFile, row_reg_310, "row_reg_310");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln7_fu_260_p1, "zext_ln7_fu_260_p1");
    sc_trace(mVcdFile, zext_ln7_reg_315, "zext_ln7_reg_315");
    sc_trace(mVcdFile, icmp_ln6_fu_240_p2, "icmp_ln6_fu_240_p2");
    sc_trace(mVcdFile, col_fu_270_p2, "col_fu_270_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, f_0_reg_194, "f_0_reg_194");
    sc_trace(mVcdFile, row_0_reg_206, "row_0_reg_206");
    sc_trace(mVcdFile, icmp_ln7_fu_264_p2, "icmp_ln7_fu_264_p2");
    sc_trace(mVcdFile, icmp_ln5_fu_228_p2, "icmp_ln5_fu_228_p2");
    sc_trace(mVcdFile, col_0_reg_217, "col_0_reg_217");
    sc_trace(mVcdFile, zext_ln203_5_fu_285_p1, "zext_ln203_5_fu_285_p1");
    sc_trace(mVcdFile, tmp_fu_252_p3, "tmp_fu_252_p3");
    sc_trace(mVcdFile, zext_ln203_fu_276_p1, "zext_ln203_fu_276_p1");
    sc_trace(mVcdFile, add_ln203_fu_280_p2, "add_ln203_fu_280_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

makeItZero::~makeItZero() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void makeItZero::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_fu_240_p2.read(), ap_const_lv1_0))) {
        col_0_reg_217 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()))) {
        col_0_reg_217 = col_fu_270_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_fu_240_p2.read(), ap_const_lv1_1))) {
        f_0_reg_194 = f_reg_302.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        f_0_reg_194 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln5_fu_228_p2.read()))) {
        row_0_reg_206 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln7_fu_264_p2.read()))) {
        row_0_reg_206 = row_reg_310.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        f_reg_302 = f_fu_234_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        row_reg_310 = row_fu_246_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_240_p2.read(), ap_const_lv1_0))) {
        zext_ln7_reg_315 = zext_ln7_fu_260_p1.read();
    }
}

void makeItZero::thread_A_0_V_address0() {
    A_0_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_0_V_ce0 = ap_const_logic_1;
    } else {
        A_0_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_0_V_d0() {
    A_0_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_0, f_0_reg_194.read()))) {
        A_0_V_we0 = ap_const_logic_1;
    } else {
        A_0_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_1_V_address0() {
    A_1_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_1_V_ce0 = ap_const_logic_1;
    } else {
        A_1_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_1_V_d0() {
    A_1_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_1))) {
        A_1_V_we0 = ap_const_logic_1;
    } else {
        A_1_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_2_V_address0() {
    A_2_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_2_V_ce0 = ap_const_logic_1;
    } else {
        A_2_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_2_V_d0() {
    A_2_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_2))) {
        A_2_V_we0 = ap_const_logic_1;
    } else {
        A_2_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_3_V_address0() {
    A_3_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_3_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_3_V_ce0 = ap_const_logic_1;
    } else {
        A_3_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_3_V_d0() {
    A_3_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_3))) {
        A_3_V_we0 = ap_const_logic_1;
    } else {
        A_3_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_4_V_address0() {
    A_4_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_4_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_4_V_ce0 = ap_const_logic_1;
    } else {
        A_4_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_4_V_d0() {
    A_4_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_4))) {
        A_4_V_we0 = ap_const_logic_1;
    } else {
        A_4_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_5_V_address0() {
    A_5_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_5_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_5_V_ce0 = ap_const_logic_1;
    } else {
        A_5_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_5_V_d0() {
    A_5_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_5))) {
        A_5_V_we0 = ap_const_logic_1;
    } else {
        A_5_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_6_V_address0() {
    A_6_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_6_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_6_V_ce0 = ap_const_logic_1;
    } else {
        A_6_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_6_V_d0() {
    A_6_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_6))) {
        A_6_V_we0 = ap_const_logic_1;
    } else {
        A_6_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_7_V_address0() {
    A_7_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_7_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_7_V_ce0 = ap_const_logic_1;
    } else {
        A_7_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_7_V_d0() {
    A_7_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_7_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_7))) {
        A_7_V_we0 = ap_const_logic_1;
    } else {
        A_7_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_8_V_address0() {
    A_8_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_8_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_8_V_ce0 = ap_const_logic_1;
    } else {
        A_8_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_8_V_d0() {
    A_8_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_8_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_8))) {
        A_8_V_we0 = ap_const_logic_1;
    } else {
        A_8_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_9_V_address0() {
    A_9_V_address0 =  (sc_lv<6>) (zext_ln203_5_fu_285_p1.read());
}

void makeItZero::thread_A_9_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_9_V_ce0 = ap_const_logic_1;
    } else {
        A_9_V_ce0 = ap_const_logic_0;
    }
}

void makeItZero::thread_A_9_V_d0() {
    A_9_V_d0 = ap_const_lv15_0;
}

void makeItZero::thread_A_9_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_264_p2.read()) && 
         !esl_seteq<1,4,4>(ap_const_lv4_0, f_0_reg_194.read()) && 
         !esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_1) && 
         !esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_2) && 
         !esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_3) && 
         !esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_4) && 
         !esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_5) && 
         !esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_6) && 
         !esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_7) && 
         !esl_seteq<1,4,4>(f_0_reg_194.read(), ap_const_lv4_8))) {
        A_9_V_we0 = ap_const_logic_1;
    } else {
        A_9_V_we0 = ap_const_logic_0;
    }
}

void makeItZero::thread_add_ln203_fu_280_p2() {
    add_ln203_fu_280_p2 = (!zext_ln7_reg_315.read().is_01() || !zext_ln203_fu_276_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln7_reg_315.read()) + sc_biguint<8>(zext_ln203_fu_276_p1.read()));
}

void makeItZero::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void makeItZero::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void makeItZero::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void makeItZero::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void makeItZero::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln5_fu_228_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void makeItZero::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void makeItZero::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln5_fu_228_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void makeItZero::thread_col_fu_270_p2() {
    col_fu_270_p2 = (!col_0_reg_217.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(col_0_reg_217.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void makeItZero::thread_f_fu_234_p2() {
    f_fu_234_p2 = (!f_0_reg_194.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(f_0_reg_194.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void makeItZero::thread_icmp_ln5_fu_228_p2() {
    icmp_ln5_fu_228_p2 = (!f_0_reg_194.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(f_0_reg_194.read() == ap_const_lv4_A);
}

void makeItZero::thread_icmp_ln6_fu_240_p2() {
    icmp_ln6_fu_240_p2 = (!row_0_reg_206.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(row_0_reg_206.read() == ap_const_lv4_8);
}

void makeItZero::thread_icmp_ln7_fu_264_p2() {
    icmp_ln7_fu_264_p2 = (!col_0_reg_217.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(col_0_reg_217.read() == ap_const_lv4_8);
}

void makeItZero::thread_row_fu_246_p2() {
    row_fu_246_p2 = (!row_0_reg_206.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(row_0_reg_206.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void makeItZero::thread_tmp_fu_252_p3() {
    tmp_fu_252_p3 = esl_concat<4,3>(row_0_reg_206.read(), ap_const_lv3_0);
}

void makeItZero::thread_zext_ln203_5_fu_285_p1() {
    zext_ln203_5_fu_285_p1 = esl_zext<64,8>(add_ln203_fu_280_p2.read());
}

void makeItZero::thread_zext_ln203_fu_276_p1() {
    zext_ln203_fu_276_p1 = esl_zext<8,4>(col_0_reg_217.read());
}

void makeItZero::thread_zext_ln7_fu_260_p1() {
    zext_ln7_fu_260_p1 = esl_zext<8,7>(tmp_fu_252_p3.read());
}

void makeItZero::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln5_fu_228_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_240_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln7_fu_264_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

