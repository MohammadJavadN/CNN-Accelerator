// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_layer_HH_
#define _dense_layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fadd_32ns_32ncud.h"
#include "cnn_fmul_32ns_32ng8j.h"
#include "cnn_fdiv_32ns_32nhbi.h"
#include "cnn_fexp_32ns_32nibs.h"
#include "dense_layer_densedEe.h"
#include "dense_layer_denseeOg.h"
#include "dense_layer_densefYi.h"

namespace ap_rtl {

struct dense_layer : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > prediction_address0;
    sc_out< sc_logic > prediction_ce0;
    sc_out< sc_logic > prediction_we0;
    sc_out< sc_lv<32> > prediction_d0;
    sc_out< sc_lv<8> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_in< sc_lv<32> > flat_array_q0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    dense_layer(sc_module_name name);
    SC_HAS_PROCESS(dense_layer);

    ~dense_layer();

    sc_trace_file* mVcdFile;

    dense_layer_densedEe* dense_weights_U;
    dense_layer_denseeOg* dense_biases_U;
    dense_layer_densefYi* dense_array_U;
    cnn_fadd_32ns_32ncud<1,1,32,32,32>* cnn_fadd_32ns_32ncud_U33;
    cnn_fmul_32ns_32ng8j<1,1,32,32,32>* cnn_fmul_32ns_32ng8j_U34;
    cnn_fdiv_32ns_32nhbi<1,2,32,32,32>* cnn_fdiv_32ns_32nhbi_U35;
    cnn_fexp_32ns_32nibs<1,2,32,32,32>* cnn_fexp_32ns_32nibs_U36;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > dense_weights_address0;
    sc_signal< sc_logic > dense_weights_ce0;
    sc_signal< sc_lv<32> > dense_weights_q0;
    sc_signal< sc_lv<4> > dense_biases_address0;
    sc_signal< sc_logic > dense_biases_ce0;
    sc_signal< sc_lv<32> > dense_biases_q0;
    sc_signal< sc_lv<32> > dense_array_q0;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<4> > add_ln12_fu_250_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > d_fu_273_p2;
    sc_signal< sc_lv<4> > d_reg_389;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln20_fu_279_p1;
    sc_signal< sc_lv<64> > zext_ln20_reg_394;
    sc_signal< sc_lv<1> > icmp_ln14_fu_267_p2;
    sc_signal< sc_lv<12> > zext_ln18_fu_283_p1;
    sc_signal< sc_lv<12> > zext_ln18_reg_400;
    sc_signal< sc_lv<8> > f_fu_293_p2;
    sc_signal< sc_lv<8> > f_reg_408;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln18_fu_287_p2;
    sc_signal< sc_lv<32> > grp_fu_217_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > i_fu_350_p2;
    sc_signal< sc_lv<4> > i_reg_436;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln15_fu_344_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > j_fu_367_p2;
    sc_signal< sc_lv<4> > j_reg_454;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > zext_ln22_fu_373_p1;
    sc_signal< sc_lv<64> > zext_ln22_reg_459;
    sc_signal< sc_lv<1> > icmp_ln20_fu_361_p2;
    sc_signal< sc_lv<32> > grp_fu_238_p2;
    sc_signal< sc_lv<32> > tmp_2_i_reg_469;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<4> > dense_array_address0;
    sc_signal< sc_logic > dense_array_ce0;
    sc_signal< sc_logic > dense_array_we0;
    sc_signal< sc_lv<32> > dense_array_d0;
    sc_signal< sc_lv<4> > phi_ln12_reg_138;
    sc_signal< sc_lv<1> > icmp_ln12_fu_261_p2;
    sc_signal< sc_lv<4> > d_0_reg_149;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > w_sum_0_reg_160;
    sc_signal< sc_lv<8> > f_0_reg_172;
    sc_signal< sc_lv<32> > sum_0_i_reg_183;
    sc_signal< sc_lv<4> > i_0_i_reg_195;
    sc_signal< sc_lv<4> > j_0_i_reg_206;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<64> > zext_ln12_fu_256_p1;
    sc_signal< sc_lv<64> > zext_ln20_4_fu_339_p1;
    sc_signal< sc_lv<64> > zext_ln20_1_fu_299_p1;
    sc_signal< sc_lv<64> > zext_ln17_fu_356_p1;
    sc_signal< sc_lv<32> > grp_fu_232_p2;
    sc_signal< sc_lv<32> > grp_fu_217_p0;
    sc_signal< sc_lv<32> > grp_fu_217_p1;
    sc_signal< sc_lv<32> > tmp_9_fu_225_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<11> > tmp_s_fu_304_p3;
    sc_signal< sc_lv<9> > tmp_2_fu_316_p3;
    sc_signal< sc_lv<12> > zext_ln20_3_fu_324_p1;
    sc_signal< sc_lv<12> > zext_ln20_2_fu_312_p1;
    sc_signal< sc_lv<12> > add_ln20_fu_328_p2;
    sc_signal< sc_lv<12> > add_ln20_1_fu_334_p2;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<8> ap_const_lv8_A0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_fu_250_p2();
    void thread_add_ln20_1_fu_334_p2();
    void thread_add_ln20_fu_328_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_d_fu_273_p2();
    void thread_dense_array_address0();
    void thread_dense_array_ce0();
    void thread_dense_array_d0();
    void thread_dense_array_we0();
    void thread_dense_biases_address0();
    void thread_dense_biases_ce0();
    void thread_dense_weights_address0();
    void thread_dense_weights_ce0();
    void thread_f_fu_293_p2();
    void thread_flat_array_address0();
    void thread_flat_array_ce0();
    void thread_grp_fu_217_p0();
    void thread_grp_fu_217_p1();
    void thread_i_fu_350_p2();
    void thread_icmp_ln12_fu_261_p2();
    void thread_icmp_ln14_fu_267_p2();
    void thread_icmp_ln15_fu_344_p2();
    void thread_icmp_ln18_fu_287_p2();
    void thread_icmp_ln20_fu_361_p2();
    void thread_j_fu_367_p2();
    void thread_prediction_address0();
    void thread_prediction_ce0();
    void thread_prediction_d0();
    void thread_prediction_we0();
    void thread_tmp_2_fu_316_p3();
    void thread_tmp_s_fu_304_p3();
    void thread_zext_ln12_fu_256_p1();
    void thread_zext_ln17_fu_356_p1();
    void thread_zext_ln18_fu_283_p1();
    void thread_zext_ln20_1_fu_299_p1();
    void thread_zext_ln20_2_fu_312_p1();
    void thread_zext_ln20_3_fu_324_p1();
    void thread_zext_ln20_4_fu_339_p1();
    void thread_zext_ln20_fu_279_p1();
    void thread_zext_ln22_fu_373_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
