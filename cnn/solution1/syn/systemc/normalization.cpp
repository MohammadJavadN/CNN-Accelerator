// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "normalization.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic normalization::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic normalization::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<28> normalization::ap_ST_fsm_state1 = "1";
const sc_lv<28> normalization::ap_ST_fsm_state2 = "10";
const sc_lv<28> normalization::ap_ST_fsm_state3 = "100";
const sc_lv<28> normalization::ap_ST_fsm_state4 = "1000";
const sc_lv<28> normalization::ap_ST_fsm_state5 = "10000";
const sc_lv<28> normalization::ap_ST_fsm_state6 = "100000";
const sc_lv<28> normalization::ap_ST_fsm_state7 = "1000000";
const sc_lv<28> normalization::ap_ST_fsm_state8 = "10000000";
const sc_lv<28> normalization::ap_ST_fsm_state9 = "100000000";
const sc_lv<28> normalization::ap_ST_fsm_state10 = "1000000000";
const sc_lv<28> normalization::ap_ST_fsm_state11 = "10000000000";
const sc_lv<28> normalization::ap_ST_fsm_state12 = "100000000000";
const sc_lv<28> normalization::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<28> normalization::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<32> normalization::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> normalization::ap_const_lv32_2 = "10";
const sc_lv<1> normalization::ap_const_lv1_0 = "0";
const sc_lv<32> normalization::ap_const_lv32_1B = "11011";
const sc_lv<32> normalization::ap_const_lv32_1 = "1";
const sc_lv<32> normalization::ap_const_lv32_3 = "11";
const sc_lv<32> normalization::ap_const_lv32_19 = "11001";
const sc_lv<32> normalization::ap_const_lv32_1A = "11010";
const sc_lv<5> normalization::ap_const_lv5_0 = "00000";
const sc_lv<1> normalization::ap_const_lv1_1 = "1";
const sc_lv<64> normalization::ap_const_lv64_406FE00000000000 = "100000001101111111000000000000000000000000000000000000000000000";
const sc_lv<32> normalization::ap_const_lv32_4 = "100";
const sc_lv<5> normalization::ap_const_lv5_1C = "11100";
const sc_lv<5> normalization::ap_const_lv5_1 = "1";
const sc_lv<32> normalization::ap_const_lv32_3F = "111111";
const sc_lv<32> normalization::ap_const_lv32_34 = "110100";
const sc_lv<32> normalization::ap_const_lv32_3E = "111110";
const sc_lv<54> normalization::ap_const_lv54_0 = "000000000000000000000000000000000000000000000000000000";
const sc_lv<63> normalization::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<12> normalization::ap_const_lv12_433 = "10000110011";
const sc_lv<12> normalization::ap_const_lv12_8 = "1000";
const sc_lv<12> normalization::ap_const_lv12_FF8 = "111111111000";
const sc_lv<12> normalization::ap_const_lv12_36 = "110110";
const sc_lv<12> normalization::ap_const_lv12_E = "1110";
const sc_lv<14> normalization::ap_const_lv14_3FFF = "11111111111111";
const sc_lv<14> normalization::ap_const_lv14_0 = "00000000000000";
const bool normalization::ap_const_boolean_1 = true;

normalization::normalization(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cnn_fpext_32ns_64bkb_U11 = new cnn_fpext_32ns_64bkb<1,2,32,64>("cnn_fpext_32ns_64bkb_U11");
    cnn_fpext_32ns_64bkb_U11->clk(ap_clk);
    cnn_fpext_32ns_64bkb_U11->reset(ap_rst);
    cnn_fpext_32ns_64bkb_U11->din0(img_in_V_dout);
    cnn_fpext_32ns_64bkb_U11->ce(grp_fu_99_ce);
    cnn_fpext_32ns_64bkb_U11->dout(grp_fu_99_p1);
    cnn_ddiv_64ns_64ncud_U12 = new cnn_ddiv_64ns_64ncud<1,22,64,64,64>("cnn_ddiv_64ns_64ncud_U12");
    cnn_ddiv_64ns_64ncud_U12->clk(ap_clk);
    cnn_ddiv_64ns_64ncud_U12->reset(ap_rst);
    cnn_ddiv_64ns_64ncud_U12->din0(tmp_5_reg_426);
    cnn_ddiv_64ns_64ncud_U12->din1(ap_var_for_const0);
    cnn_ddiv_64ns_64ncud_U12->ce(ap_var_for_const1);
    cnn_ddiv_64ns_64ncud_U12->dout(grp_fu_103_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_F2_fu_197_p2);
    sensitive << ( zext_ln461_fu_157_p1 );

    SC_METHOD(thread_add_ln581_fu_209_p2);
    sensitive << ( F2_fu_197_p2 );

    SC_METHOD(thread_and_ln581_fu_291_p2);
    sensitive << ( icmp_ln581_fu_203_p2 );
    sensitive << ( xor_ln582_fu_285_p2 );

    SC_METHOD(thread_and_ln582_fu_273_p2);
    sensitive << ( icmp_ln582_fu_229_p2 );
    sensitive << ( xor_ln571_fu_267_p2 );

    SC_METHOD(thread_and_ln585_2_fu_309_p2);
    sensitive << ( icmp_ln585_fu_239_p2 );
    sensitive << ( and_ln581_fu_291_p2 );

    SC_METHOD(thread_and_ln585_fu_303_p2);
    sensitive << ( and_ln581_fu_291_p2 );
    sensitive << ( xor_ln585_fu_297_p2 );

    SC_METHOD(thread_and_ln603_fu_327_p2);
    sensitive << ( icmp_ln603_fu_245_p2 );
    sensitive << ( xor_ln581_fu_321_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( img_in_V_empty_n );
    sensitive << ( icmp_ln19_fu_120_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln18_fu_108_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln18_fu_108_p2 );

    SC_METHOD(thread_ashr_ln586_fu_366_p2);
    sensitive << ( man_V_4_reg_436 );
    sensitive << ( zext_ln586_fu_362_p1 );

    SC_METHOD(thread_c_fu_126_p2);
    sensitive << ( c_0_reg_88 );

    SC_METHOD(thread_exp_tmp_V_fu_147_p4);
    sensitive << ( ireg_V_fu_132_p1 );

    SC_METHOD(thread_grp_fu_99_ce);
    sensitive << ( img_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln19_fu_120_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln18_fu_108_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_reg_77 );

    SC_METHOD(thread_icmp_ln19_fu_120_p2);
    sensitive << ( img_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln19_fu_120_p2 );
    sensitive << ( c_0_reg_88 );

    SC_METHOD(thread_icmp_ln571_fu_191_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( trunc_ln556_fu_135_p1 );

    SC_METHOD(thread_icmp_ln581_fu_203_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( F2_fu_197_p2 );

    SC_METHOD(thread_icmp_ln582_fu_229_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( F2_fu_197_p2 );

    SC_METHOD(thread_icmp_ln585_fu_239_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( sh_amt_fu_221_p3 );

    SC_METHOD(thread_icmp_ln603_fu_245_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( sh_amt_fu_221_p3 );

    SC_METHOD(thread_img_in_V_blk_n);
    sensitive << ( img_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln19_fu_120_p2 );

    SC_METHOD(thread_img_in_V_read);
    sensitive << ( img_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln19_fu_120_p2 );

    SC_METHOD(thread_img_out_V_V_blk_n);
    sensitive << ( img_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_img_out_V_V_din);
    sensitive << ( img_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( or_ln603_4_reg_466 );
    sensitive << ( select_ln603_5_fu_391_p3 );

    SC_METHOD(thread_img_out_V_V_write);
    sensitive << ( img_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_ireg_V_fu_132_p1);
    sensitive << ( v_assign_reg_431 );

    SC_METHOD(thread_man_V_3_fu_177_p2);
    sensitive << ( p_Result_2_fu_173_p1 );

    SC_METHOD(thread_man_V_4_fu_183_p3);
    sensitive << ( p_Result_2_fu_173_p1 );
    sensitive << ( p_Result_s_fu_139_p3 );
    sensitive << ( man_V_3_fu_177_p2 );

    SC_METHOD(thread_or_ln581_fu_315_p2);
    sensitive << ( icmp_ln581_fu_203_p2 );
    sensitive << ( or_ln582_fu_279_p2 );

    SC_METHOD(thread_or_ln582_fu_279_p2);
    sensitive << ( icmp_ln571_fu_191_p2 );
    sensitive << ( icmp_ln582_fu_229_p2 );

    SC_METHOD(thread_or_ln603_3_fu_347_p2);
    sensitive << ( and_ln585_fu_303_p2 );
    sensitive << ( and_ln582_fu_273_p2 );

    SC_METHOD(thread_or_ln603_4_fu_353_p2);
    sensitive << ( or_ln603_fu_333_p2 );
    sensitive << ( or_ln603_3_fu_347_p2 );

    SC_METHOD(thread_or_ln603_fu_333_p2);
    sensitive << ( and_ln603_fu_327_p2 );
    sensitive << ( and_ln585_2_fu_309_p2 );

    SC_METHOD(thread_p_Result_2_fu_173_p1);
    sensitive << ( tmp_2_fu_165_p3 );

    SC_METHOD(thread_p_Result_s_fu_139_p3);
    sensitive << ( ireg_V_fu_132_p1 );

    SC_METHOD(thread_r_fu_114_p2);
    sensitive << ( r_0_reg_77 );

    SC_METHOD(thread_select_ln588_fu_259_p3);
    sensitive << ( tmp_7_fu_251_p3 );

    SC_METHOD(thread_select_ln603_4_fu_339_p3);
    sensitive << ( trunc_ln583_fu_235_p1 );
    sensitive << ( and_ln585_fu_303_p2 );
    sensitive << ( select_ln588_fu_259_p3 );

    SC_METHOD(thread_select_ln603_5_fu_391_p3);
    sensitive << ( or_ln603_reg_456 );
    sensitive << ( select_ln603_4_reg_461 );
    sensitive << ( select_ln603_fu_384_p3 );

    SC_METHOD(thread_select_ln603_fu_384_p3);
    sensitive << ( and_ln603_reg_451 );
    sensitive << ( shl_ln604_fu_379_p2 );
    sensitive << ( trunc_ln586_fu_371_p1 );

    SC_METHOD(thread_sext_ln581_fu_359_p1);
    sensitive << ( sh_amt_reg_441 );

    SC_METHOD(thread_sext_ln581cast_fu_375_p1);
    sensitive << ( sext_ln581_fu_359_p1 );

    SC_METHOD(thread_sh_amt_fu_221_p3);
    sensitive << ( icmp_ln581_fu_203_p2 );
    sensitive << ( add_ln581_fu_209_p2 );
    sensitive << ( sub_ln581_fu_215_p2 );

    SC_METHOD(thread_shl_ln604_fu_379_p2);
    sensitive << ( trunc_ln583_reg_446 );
    sensitive << ( sext_ln581cast_fu_375_p1 );

    SC_METHOD(thread_sub_ln581_fu_215_p2);
    sensitive << ( F2_fu_197_p2 );

    SC_METHOD(thread_tmp_2_fu_165_p3);
    sensitive << ( trunc_ln565_fu_161_p1 );

    SC_METHOD(thread_tmp_7_fu_251_p3);
    sensitive << ( ireg_V_fu_132_p1 );

    SC_METHOD(thread_trunc_ln556_fu_135_p1);
    sensitive << ( ireg_V_fu_132_p1 );

    SC_METHOD(thread_trunc_ln565_fu_161_p1);
    sensitive << ( ireg_V_fu_132_p1 );

    SC_METHOD(thread_trunc_ln583_fu_235_p1);
    sensitive << ( man_V_4_fu_183_p3 );

    SC_METHOD(thread_trunc_ln586_fu_371_p1);
    sensitive << ( ashr_ln586_fu_366_p2 );

    SC_METHOD(thread_xor_ln571_fu_267_p2);
    sensitive << ( icmp_ln571_fu_191_p2 );

    SC_METHOD(thread_xor_ln581_fu_321_p2);
    sensitive << ( or_ln581_fu_315_p2 );

    SC_METHOD(thread_xor_ln582_fu_285_p2);
    sensitive << ( or_ln582_fu_279_p2 );

    SC_METHOD(thread_xor_ln585_fu_297_p2);
    sensitive << ( icmp_ln585_fu_239_p2 );

    SC_METHOD(thread_zext_ln461_fu_157_p1);
    sensitive << ( exp_tmp_V_fu_147_p4 );

    SC_METHOD(thread_zext_ln586_fu_362_p1);
    sensitive << ( sext_ln581_fu_359_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_in_V_empty_n );
    sensitive << ( img_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln19_fu_120_p2 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln18_fu_108_p2 );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "normalization_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, img_in_V_dout, "(port)img_in_V_dout");
    sc_trace(mVcdFile, img_in_V_empty_n, "(port)img_in_V_empty_n");
    sc_trace(mVcdFile, img_in_V_read, "(port)img_in_V_read");
    sc_trace(mVcdFile, img_out_V_V_din, "(port)img_out_V_V_din");
    sc_trace(mVcdFile, img_out_V_V_full_n, "(port)img_out_V_V_full_n");
    sc_trace(mVcdFile, img_out_V_V_write, "(port)img_out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, img_in_V_blk_n, "img_in_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln19_fu_120_p2, "icmp_ln19_fu_120_p2");
    sc_trace(mVcdFile, img_out_V_V_blk_n, "img_out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, r_fu_114_p2, "r_fu_114_p2");
    sc_trace(mVcdFile, r_reg_408, "r_reg_408");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, c_fu_126_p2, "c_fu_126_p2");
    sc_trace(mVcdFile, c_reg_416, "c_reg_416");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, grp_fu_99_p1, "grp_fu_99_p1");
    sc_trace(mVcdFile, tmp_5_reg_426, "tmp_5_reg_426");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_103_p2, "grp_fu_103_p2");
    sc_trace(mVcdFile, v_assign_reg_431, "v_assign_reg_431");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, man_V_4_fu_183_p3, "man_V_4_fu_183_p3");
    sc_trace(mVcdFile, man_V_4_reg_436, "man_V_4_reg_436");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, sh_amt_fu_221_p3, "sh_amt_fu_221_p3");
    sc_trace(mVcdFile, sh_amt_reg_441, "sh_amt_reg_441");
    sc_trace(mVcdFile, trunc_ln583_fu_235_p1, "trunc_ln583_fu_235_p1");
    sc_trace(mVcdFile, trunc_ln583_reg_446, "trunc_ln583_reg_446");
    sc_trace(mVcdFile, and_ln603_fu_327_p2, "and_ln603_fu_327_p2");
    sc_trace(mVcdFile, and_ln603_reg_451, "and_ln603_reg_451");
    sc_trace(mVcdFile, or_ln603_fu_333_p2, "or_ln603_fu_333_p2");
    sc_trace(mVcdFile, or_ln603_reg_456, "or_ln603_reg_456");
    sc_trace(mVcdFile, select_ln603_4_fu_339_p3, "select_ln603_4_fu_339_p3");
    sc_trace(mVcdFile, select_ln603_4_reg_461, "select_ln603_4_reg_461");
    sc_trace(mVcdFile, or_ln603_4_fu_353_p2, "or_ln603_4_fu_353_p2");
    sc_trace(mVcdFile, or_ln603_4_reg_466, "or_ln603_4_reg_466");
    sc_trace(mVcdFile, r_0_reg_77, "r_0_reg_77");
    sc_trace(mVcdFile, c_0_reg_88, "c_0_reg_88");
    sc_trace(mVcdFile, icmp_ln18_fu_108_p2, "icmp_ln18_fu_108_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ireg_V_fu_132_p1, "ireg_V_fu_132_p1");
    sc_trace(mVcdFile, exp_tmp_V_fu_147_p4, "exp_tmp_V_fu_147_p4");
    sc_trace(mVcdFile, trunc_ln565_fu_161_p1, "trunc_ln565_fu_161_p1");
    sc_trace(mVcdFile, tmp_2_fu_165_p3, "tmp_2_fu_165_p3");
    sc_trace(mVcdFile, p_Result_2_fu_173_p1, "p_Result_2_fu_173_p1");
    sc_trace(mVcdFile, p_Result_s_fu_139_p3, "p_Result_s_fu_139_p3");
    sc_trace(mVcdFile, man_V_3_fu_177_p2, "man_V_3_fu_177_p2");
    sc_trace(mVcdFile, trunc_ln556_fu_135_p1, "trunc_ln556_fu_135_p1");
    sc_trace(mVcdFile, zext_ln461_fu_157_p1, "zext_ln461_fu_157_p1");
    sc_trace(mVcdFile, F2_fu_197_p2, "F2_fu_197_p2");
    sc_trace(mVcdFile, icmp_ln581_fu_203_p2, "icmp_ln581_fu_203_p2");
    sc_trace(mVcdFile, add_ln581_fu_209_p2, "add_ln581_fu_209_p2");
    sc_trace(mVcdFile, sub_ln581_fu_215_p2, "sub_ln581_fu_215_p2");
    sc_trace(mVcdFile, tmp_7_fu_251_p3, "tmp_7_fu_251_p3");
    sc_trace(mVcdFile, icmp_ln571_fu_191_p2, "icmp_ln571_fu_191_p2");
    sc_trace(mVcdFile, icmp_ln582_fu_229_p2, "icmp_ln582_fu_229_p2");
    sc_trace(mVcdFile, xor_ln571_fu_267_p2, "xor_ln571_fu_267_p2");
    sc_trace(mVcdFile, or_ln582_fu_279_p2, "or_ln582_fu_279_p2");
    sc_trace(mVcdFile, xor_ln582_fu_285_p2, "xor_ln582_fu_285_p2");
    sc_trace(mVcdFile, icmp_ln585_fu_239_p2, "icmp_ln585_fu_239_p2");
    sc_trace(mVcdFile, and_ln581_fu_291_p2, "and_ln581_fu_291_p2");
    sc_trace(mVcdFile, xor_ln585_fu_297_p2, "xor_ln585_fu_297_p2");
    sc_trace(mVcdFile, or_ln581_fu_315_p2, "or_ln581_fu_315_p2");
    sc_trace(mVcdFile, icmp_ln603_fu_245_p2, "icmp_ln603_fu_245_p2");
    sc_trace(mVcdFile, xor_ln581_fu_321_p2, "xor_ln581_fu_321_p2");
    sc_trace(mVcdFile, and_ln585_2_fu_309_p2, "and_ln585_2_fu_309_p2");
    sc_trace(mVcdFile, and_ln585_fu_303_p2, "and_ln585_fu_303_p2");
    sc_trace(mVcdFile, select_ln588_fu_259_p3, "select_ln588_fu_259_p3");
    sc_trace(mVcdFile, and_ln582_fu_273_p2, "and_ln582_fu_273_p2");
    sc_trace(mVcdFile, or_ln603_3_fu_347_p2, "or_ln603_3_fu_347_p2");
    sc_trace(mVcdFile, sext_ln581_fu_359_p1, "sext_ln581_fu_359_p1");
    sc_trace(mVcdFile, zext_ln586_fu_362_p1, "zext_ln586_fu_362_p1");
    sc_trace(mVcdFile, ashr_ln586_fu_366_p2, "ashr_ln586_fu_366_p2");
    sc_trace(mVcdFile, sext_ln581cast_fu_375_p1, "sext_ln581cast_fu_375_p1");
    sc_trace(mVcdFile, shl_ln604_fu_379_p2, "shl_ln604_fu_379_p2");
    sc_trace(mVcdFile, trunc_ln586_fu_371_p1, "trunc_ln586_fu_371_p1");
    sc_trace(mVcdFile, select_ln603_fu_384_p3, "select_ln603_fu_384_p3");
    sc_trace(mVcdFile, select_ln603_5_fu_391_p3, "select_ln603_5_fu_391_p3");
    sc_trace(mVcdFile, grp_fu_99_ce, "grp_fu_99_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

normalization::~normalization() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete cnn_fpext_32ns_64bkb_U11;
    delete cnn_ddiv_64ns_64ncud_U12;
}

void normalization::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void normalization::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv64_406FE00000000000;
}

void normalization::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_108_p2.read()))) {
        c_0_reg_88 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                esl_seteq<1,1,1>(img_out_V_V_full_n.read(), ap_const_logic_1))) {
        c_0_reg_88 = c_reg_416.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, img_in_V_empty_n.read())) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_1))) {
        r_0_reg_77 = r_reg_408.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_77 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        and_ln603_reg_451 = and_ln603_fu_327_p2.read();
        man_V_4_reg_436 = man_V_4_fu_183_p3.read();
        or_ln603_4_reg_466 = or_ln603_4_fu_353_p2.read();
        or_ln603_reg_456 = or_ln603_fu_333_p2.read();
        select_ln603_4_reg_461 = select_ln603_4_fu_339_p3.read();
        sh_amt_reg_441 = sh_amt_fu_221_p3.read();
        trunc_ln583_reg_446 = trunc_ln583_fu_235_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, img_in_V_empty_n.read())))) {
        c_reg_416 = c_fu_126_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_reg_408 = r_fu_114_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_5_reg_426 = grp_fu_99_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        v_assign_reg_431 = grp_fu_103_p2.read();
    }
}

void normalization::thread_F2_fu_197_p2() {
    F2_fu_197_p2 = (!ap_const_lv12_433.is_01() || !zext_ln461_fu_157_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_433) - sc_biguint<12>(zext_ln461_fu_157_p1.read()));
}

void normalization::thread_add_ln581_fu_209_p2() {
    add_ln581_fu_209_p2 = (!ap_const_lv12_FF8.is_01() || !F2_fu_197_p2.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_FF8) + sc_biguint<12>(F2_fu_197_p2.read()));
}

void normalization::thread_and_ln581_fu_291_p2() {
    and_ln581_fu_291_p2 = (icmp_ln581_fu_203_p2.read() & xor_ln582_fu_285_p2.read());
}

void normalization::thread_and_ln582_fu_273_p2() {
    and_ln582_fu_273_p2 = (icmp_ln582_fu_229_p2.read() & xor_ln571_fu_267_p2.read());
}

void normalization::thread_and_ln585_2_fu_309_p2() {
    and_ln585_2_fu_309_p2 = (and_ln581_fu_291_p2.read() & icmp_ln585_fu_239_p2.read());
}

void normalization::thread_and_ln585_fu_303_p2() {
    and_ln585_fu_303_p2 = (and_ln581_fu_291_p2.read() & xor_ln585_fu_297_p2.read());
}

void normalization::thread_and_ln603_fu_327_p2() {
    and_ln603_fu_327_p2 = (icmp_ln603_fu_245_p2.read() & xor_ln581_fu_321_p2.read());
}

void normalization::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void normalization::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void normalization::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void normalization::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void normalization::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void normalization::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void normalization::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void normalization::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void normalization::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, img_in_V_empty_n.read()));
}

void normalization::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln18_fu_108_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void normalization::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void normalization::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln18_fu_108_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void normalization::thread_ashr_ln586_fu_366_p2() {
    ashr_ln586_fu_366_p2 = (!man_V_4_reg_436.read().is_01() || !zext_ln586_fu_362_p1.read().is_01())? sc_lv<54>(): sc_bigint<54>(man_V_4_reg_436.read()) >> (unsigned short)zext_ln586_fu_362_p1.read().to_uint();
}

void normalization::thread_c_fu_126_p2() {
    c_fu_126_p2 = (!c_0_reg_88.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(c_0_reg_88.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void normalization::thread_exp_tmp_V_fu_147_p4() {
    exp_tmp_V_fu_147_p4 = ireg_V_fu_132_p1.read().range(62, 52);
}

void normalization::thread_grp_fu_99_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, img_in_V_empty_n.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_99_ce = ap_const_logic_1;
    } else {
        grp_fu_99_ce = ap_const_logic_0;
    }
}

void normalization::thread_icmp_ln18_fu_108_p2() {
    icmp_ln18_fu_108_p2 = (!r_0_reg_77.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_77.read() == ap_const_lv5_1C);
}

void normalization::thread_icmp_ln19_fu_120_p2() {
    icmp_ln19_fu_120_p2 = (!c_0_reg_88.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_88.read() == ap_const_lv5_1C);
}

void normalization::thread_icmp_ln571_fu_191_p2() {
    icmp_ln571_fu_191_p2 = (!trunc_ln556_fu_135_p1.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln556_fu_135_p1.read() == ap_const_lv63_0);
}

void normalization::thread_icmp_ln581_fu_203_p2() {
    icmp_ln581_fu_203_p2 = (!F2_fu_197_p2.read().is_01() || !ap_const_lv12_8.is_01())? sc_lv<1>(): (sc_bigint<12>(F2_fu_197_p2.read()) > sc_bigint<12>(ap_const_lv12_8));
}

void normalization::thread_icmp_ln582_fu_229_p2() {
    icmp_ln582_fu_229_p2 = (!F2_fu_197_p2.read().is_01() || !ap_const_lv12_8.is_01())? sc_lv<1>(): sc_lv<1>(F2_fu_197_p2.read() == ap_const_lv12_8);
}

void normalization::thread_icmp_ln585_fu_239_p2() {
    icmp_ln585_fu_239_p2 = (!sh_amt_fu_221_p3.read().is_01() || !ap_const_lv12_36.is_01())? sc_lv<1>(): (sc_biguint<12>(sh_amt_fu_221_p3.read()) < sc_biguint<12>(ap_const_lv12_36));
}

void normalization::thread_icmp_ln603_fu_245_p2() {
    icmp_ln603_fu_245_p2 = (!sh_amt_fu_221_p3.read().is_01() || !ap_const_lv12_E.is_01())? sc_lv<1>(): (sc_biguint<12>(sh_amt_fu_221_p3.read()) < sc_biguint<12>(ap_const_lv12_E));
}

void normalization::thread_img_in_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0))) {
        img_in_V_blk_n = img_in_V_empty_n.read();
    } else {
        img_in_V_blk_n = ap_const_logic_1;
    }
}

void normalization::thread_img_in_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, img_in_V_empty_n.read())))) {
        img_in_V_read = ap_const_logic_1;
    } else {
        img_in_V_read = ap_const_logic_0;
    }
}

void normalization::thread_img_out_V_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        img_out_V_V_blk_n = img_out_V_V_full_n.read();
    } else {
        img_out_V_V_blk_n = ap_const_logic_1;
    }
}

void normalization::thread_img_out_V_V_din() {
    img_out_V_V_din = (!or_ln603_4_reg_466.read()[0].is_01())? sc_lv<14>(): ((or_ln603_4_reg_466.read()[0].to_bool())? select_ln603_5_fu_391_p3.read(): ap_const_lv14_0);
}

void normalization::thread_img_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
         esl_seteq<1,1,1>(img_out_V_V_full_n.read(), ap_const_logic_1))) {
        img_out_V_V_write = ap_const_logic_1;
    } else {
        img_out_V_V_write = ap_const_logic_0;
    }
}

void normalization::thread_ireg_V_fu_132_p1() {
    ireg_V_fu_132_p1 = v_assign_reg_431.read();
}

void normalization::thread_man_V_3_fu_177_p2() {
    man_V_3_fu_177_p2 = (!ap_const_lv54_0.is_01() || !p_Result_2_fu_173_p1.read().is_01())? sc_lv<54>(): (sc_biguint<54>(ap_const_lv54_0) - sc_biguint<54>(p_Result_2_fu_173_p1.read()));
}

void normalization::thread_man_V_4_fu_183_p3() {
    man_V_4_fu_183_p3 = (!p_Result_s_fu_139_p3.read()[0].is_01())? sc_lv<54>(): ((p_Result_s_fu_139_p3.read()[0].to_bool())? man_V_3_fu_177_p2.read(): p_Result_2_fu_173_p1.read());
}

void normalization::thread_or_ln581_fu_315_p2() {
    or_ln581_fu_315_p2 = (or_ln582_fu_279_p2.read() | icmp_ln581_fu_203_p2.read());
}

void normalization::thread_or_ln582_fu_279_p2() {
    or_ln582_fu_279_p2 = (icmp_ln571_fu_191_p2.read() | icmp_ln582_fu_229_p2.read());
}

void normalization::thread_or_ln603_3_fu_347_p2() {
    or_ln603_3_fu_347_p2 = (and_ln585_fu_303_p2.read() | and_ln582_fu_273_p2.read());
}

void normalization::thread_or_ln603_4_fu_353_p2() {
    or_ln603_4_fu_353_p2 = (or_ln603_fu_333_p2.read() | or_ln603_3_fu_347_p2.read());
}

void normalization::thread_or_ln603_fu_333_p2() {
    or_ln603_fu_333_p2 = (and_ln603_fu_327_p2.read() | and_ln585_2_fu_309_p2.read());
}

void normalization::thread_p_Result_2_fu_173_p1() {
    p_Result_2_fu_173_p1 = esl_zext<54,53>(tmp_2_fu_165_p3.read());
}

void normalization::thread_p_Result_s_fu_139_p3() {
    p_Result_s_fu_139_p3 = ireg_V_fu_132_p1.read().range(63, 63);
}

void normalization::thread_r_fu_114_p2() {
    r_fu_114_p2 = (!r_0_reg_77.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(r_0_reg_77.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void normalization::thread_select_ln588_fu_259_p3() {
    select_ln588_fu_259_p3 = (!tmp_7_fu_251_p3.read()[0].is_01())? sc_lv<14>(): ((tmp_7_fu_251_p3.read()[0].to_bool())? ap_const_lv14_3FFF: ap_const_lv14_0);
}

void normalization::thread_select_ln603_4_fu_339_p3() {
    select_ln603_4_fu_339_p3 = (!and_ln585_fu_303_p2.read()[0].is_01())? sc_lv<14>(): ((and_ln585_fu_303_p2.read()[0].to_bool())? select_ln588_fu_259_p3.read(): trunc_ln583_fu_235_p1.read());
}

void normalization::thread_select_ln603_5_fu_391_p3() {
    select_ln603_5_fu_391_p3 = (!or_ln603_reg_456.read()[0].is_01())? sc_lv<14>(): ((or_ln603_reg_456.read()[0].to_bool())? select_ln603_fu_384_p3.read(): select_ln603_4_reg_461.read());
}

void normalization::thread_select_ln603_fu_384_p3() {
    select_ln603_fu_384_p3 = (!and_ln603_reg_451.read()[0].is_01())? sc_lv<14>(): ((and_ln603_reg_451.read()[0].to_bool())? shl_ln604_fu_379_p2.read(): trunc_ln586_fu_371_p1.read());
}

void normalization::thread_sext_ln581_fu_359_p1() {
    sext_ln581_fu_359_p1 = esl_sext<32,12>(sh_amt_reg_441.read());
}

void normalization::thread_sext_ln581cast_fu_375_p1() {
    sext_ln581cast_fu_375_p1 = sext_ln581_fu_359_p1.read().range(14-1, 0);
}

void normalization::thread_sh_amt_fu_221_p3() {
    sh_amt_fu_221_p3 = (!icmp_ln581_fu_203_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln581_fu_203_p2.read()[0].to_bool())? add_ln581_fu_209_p2.read(): sub_ln581_fu_215_p2.read());
}

void normalization::thread_shl_ln604_fu_379_p2() {
    shl_ln604_fu_379_p2 = (!sext_ln581cast_fu_375_p1.read().is_01())? sc_lv<14>(): trunc_ln583_reg_446.read() << (unsigned short)sext_ln581cast_fu_375_p1.read().to_uint();
}

void normalization::thread_sub_ln581_fu_215_p2() {
    sub_ln581_fu_215_p2 = (!ap_const_lv12_8.is_01() || !F2_fu_197_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_8) - sc_biguint<12>(F2_fu_197_p2.read()));
}

void normalization::thread_tmp_2_fu_165_p3() {
    tmp_2_fu_165_p3 = esl_concat<1,52>(ap_const_lv1_1, trunc_ln565_fu_161_p1.read());
}

void normalization::thread_tmp_7_fu_251_p3() {
    tmp_7_fu_251_p3 = ireg_V_fu_132_p1.read().range(63, 63);
}

void normalization::thread_trunc_ln556_fu_135_p1() {
    trunc_ln556_fu_135_p1 = ireg_V_fu_132_p1.read().range(63-1, 0);
}

void normalization::thread_trunc_ln565_fu_161_p1() {
    trunc_ln565_fu_161_p1 = ireg_V_fu_132_p1.read().range(52-1, 0);
}

void normalization::thread_trunc_ln583_fu_235_p1() {
    trunc_ln583_fu_235_p1 = man_V_4_fu_183_p3.read().range(14-1, 0);
}

void normalization::thread_trunc_ln586_fu_371_p1() {
    trunc_ln586_fu_371_p1 = ashr_ln586_fu_366_p2.read().range(14-1, 0);
}

void normalization::thread_xor_ln571_fu_267_p2() {
    xor_ln571_fu_267_p2 = (icmp_ln571_fu_191_p2.read() ^ ap_const_lv1_1);
}

void normalization::thread_xor_ln581_fu_321_p2() {
    xor_ln581_fu_321_p2 = (or_ln581_fu_315_p2.read() ^ ap_const_lv1_1);
}

void normalization::thread_xor_ln582_fu_285_p2() {
    xor_ln582_fu_285_p2 = (or_ln582_fu_279_p2.read() ^ ap_const_lv1_1);
}

void normalization::thread_xor_ln585_fu_297_p2() {
    xor_ln585_fu_297_p2 = (icmp_ln585_fu_239_p2.read() ^ ap_const_lv1_1);
}

void normalization::thread_zext_ln461_fu_157_p1() {
    zext_ln461_fu_157_p1 = esl_zext<12,11>(exp_tmp_V_fu_147_p4.read());
}

void normalization::thread_zext_ln586_fu_362_p1() {
    zext_ln586_fu_362_p1 = esl_zext<54,32>(sext_ln581_fu_359_p1.read());
}

void normalization::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln18_fu_108_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, img_in_V_empty_n.read())) && esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln19_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, img_in_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(img_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

