// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_HH_
#define _max_pool_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32nbkb.h"
#include "cnn_mux_63_32_1_1.h"

namespace ap_rtl {

struct max_pool : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > feature_0_address0;
    sc_out< sc_logic > feature_0_ce0;
    sc_in< sc_lv<32> > feature_0_q0;
    sc_out< sc_lv<10> > feature_1_address0;
    sc_out< sc_logic > feature_1_ce0;
    sc_in< sc_lv<32> > feature_1_q0;
    sc_out< sc_lv<10> > feature_2_address0;
    sc_out< sc_logic > feature_2_ce0;
    sc_in< sc_lv<32> > feature_2_q0;
    sc_out< sc_lv<10> > feature_3_address0;
    sc_out< sc_logic > feature_3_ce0;
    sc_in< sc_lv<32> > feature_3_q0;
    sc_out< sc_lv<10> > feature_4_address0;
    sc_out< sc_logic > feature_4_ce0;
    sc_in< sc_lv<32> > feature_4_q0;
    sc_out< sc_lv<10> > feature_5_address0;
    sc_out< sc_logic > feature_5_ce0;
    sc_in< sc_lv<32> > feature_5_q0;
    sc_in< sc_lv<3> > feature_offset;
    sc_out< sc_lv<10> > pool_feature_address0;
    sc_out< sc_logic > pool_feature_ce0;
    sc_out< sc_logic > pool_feature_we0;
    sc_out< sc_lv<32> > pool_feature_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool(sc_module_name name);
    SC_HAS_PROCESS(max_pool);

    ~max_pool();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32nbkb<1,1,32,32,1>* cnn_fcmp_32ns_32nbkb_U1;
    cnn_mux_63_32_1_1<1,1,32,32,32,32,32,32,3,32>* cnn_mux_63_32_1_1_U2;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > sext_ln53_fu_277_p1;
    sc_signal< sc_lv<9> > sext_ln53_reg_582;
    sc_signal< sc_lv<11> > sub_ln53_1_fu_326_p2;
    sc_signal< sc_lv<11> > sub_ln53_1_reg_590;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln40_fu_281_p2;
    sc_signal< sc_lv<5> > r_fu_338_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln42_fu_332_p2;
    sc_signal< sc_lv<2> > pr_fu_354_p2;
    sc_signal< sc_lv<2> > pr_reg_606;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > sub_ln49_fu_390_p2;
    sc_signal< sc_lv<11> > sub_ln49_reg_611;
    sc_signal< sc_lv<1> > icmp_ln46_fu_348_p2;
    sc_signal< sc_lv<5> > c_fu_420_p2;
    sc_signal< sc_lv<2> > pc_fu_436_p2;
    sc_signal< sc_lv<2> > pc_reg_624;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln47_fu_430_p2;
    sc_signal< sc_lv<32> > pool_3_fu_569_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<5> > r_0_reg_171;
    sc_signal< sc_lv<5> > c_0_reg_183;
    sc_signal< sc_lv<32> > pool_0_reg_195;
    sc_signal< sc_lv<2> > pr_0_reg_208;
    sc_signal< sc_lv<32> > pool_1_reg_219;
    sc_signal< sc_lv<2> > pc_0_reg_231;
    sc_signal< sc_lv<64> > zext_ln53_4_fu_415_p1;
    sc_signal< sc_lv<64> > sext_ln49_fu_457_p1;
    sc_signal< sc_lv<32> > pool_fu_467_p8;
    sc_signal< sc_lv<7> > tmp_fu_247_p3;
    sc_signal< sc_lv<5> > tmp_9_fu_259_p3;
    sc_signal< sc_lv<8> > zext_ln53_fu_255_p1;
    sc_signal< sc_lv<8> > zext_ln53_1_fu_267_p1;
    sc_signal< sc_lv<8> > sub_ln53_fu_271_p2;
    sc_signal< sc_lv<4> > tmp_10_fu_287_p4;
    sc_signal< sc_lv<9> > zext_ln53_2_fu_297_p1;
    sc_signal< sc_lv<9> > add_ln53_fu_301_p2;
    sc_signal< sc_lv<7> > trunc_ln53_fu_306_p1;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_310_p3;
    sc_signal< sc_lv<11> > p_shl3_cast_fu_318_p3;
    sc_signal< sc_lv<5> > zext_ln46_fu_344_p1;
    sc_signal< sc_lv<5> > add_ln49_fu_360_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_366_p3;
    sc_signal< sc_lv<8> > tmp_1_fu_378_p3;
    sc_signal< sc_lv<11> > zext_ln49_fu_374_p1;
    sc_signal< sc_lv<11> > zext_ln49_1_fu_386_p1;
    sc_signal< sc_lv<4> > tmp_11_fu_396_p4;
    sc_signal< sc_lv<11> > zext_ln53_3_fu_406_p1;
    sc_signal< sc_lv<11> > add_ln53_1_fu_410_p2;
    sc_signal< sc_lv<5> > zext_ln47_fu_426_p1;
    sc_signal< sc_lv<5> > add_ln49_1_fu_442_p2;
    sc_signal< sc_lv<11> > zext_ln49_2_fu_448_p1;
    sc_signal< sc_lv<11> > add_ln49_2_fu_452_p2;
    sc_signal< sc_lv<32> > bitcast_ln49_fu_485_p1;
    sc_signal< sc_lv<32> > bitcast_ln49_1_fu_503_p1;
    sc_signal< sc_lv<8> > tmp_6_fu_489_p4;
    sc_signal< sc_lv<23> > trunc_ln49_fu_499_p1;
    sc_signal< sc_lv<1> > icmp_ln49_1_fu_527_p2;
    sc_signal< sc_lv<1> > icmp_ln49_fu_521_p2;
    sc_signal< sc_lv<8> > tmp_7_fu_507_p4;
    sc_signal< sc_lv<23> > trunc_ln49_1_fu_517_p1;
    sc_signal< sc_lv<1> > icmp_ln49_3_fu_545_p2;
    sc_signal< sc_lv<1> > icmp_ln49_2_fu_539_p2;
    sc_signal< sc_lv<1> > or_ln49_fu_533_p2;
    sc_signal< sc_lv<1> > or_ln49_1_fu_551_p2;
    sc_signal< sc_lv<1> > and_ln49_fu_557_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_242_p2;
    sc_signal< sc_lv<1> > and_ln49_1_fu_563_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln49_1_fu_442_p2();
    void thread_add_ln49_2_fu_452_p2();
    void thread_add_ln49_fu_360_p2();
    void thread_add_ln53_1_fu_410_p2();
    void thread_add_ln53_fu_301_p2();
    void thread_and_ln49_1_fu_563_p2();
    void thread_and_ln49_fu_557_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln49_1_fu_503_p1();
    void thread_bitcast_ln49_fu_485_p1();
    void thread_c_fu_420_p2();
    void thread_feature_0_address0();
    void thread_feature_0_ce0();
    void thread_feature_1_address0();
    void thread_feature_1_ce0();
    void thread_feature_2_address0();
    void thread_feature_2_ce0();
    void thread_feature_3_address0();
    void thread_feature_3_ce0();
    void thread_feature_4_address0();
    void thread_feature_4_ce0();
    void thread_feature_5_address0();
    void thread_feature_5_ce0();
    void thread_icmp_ln40_fu_281_p2();
    void thread_icmp_ln42_fu_332_p2();
    void thread_icmp_ln46_fu_348_p2();
    void thread_icmp_ln47_fu_430_p2();
    void thread_icmp_ln49_1_fu_527_p2();
    void thread_icmp_ln49_2_fu_539_p2();
    void thread_icmp_ln49_3_fu_545_p2();
    void thread_icmp_ln49_fu_521_p2();
    void thread_or_ln49_1_fu_551_p2();
    void thread_or_ln49_fu_533_p2();
    void thread_p_shl2_cast_fu_310_p3();
    void thread_p_shl3_cast_fu_318_p3();
    void thread_pc_fu_436_p2();
    void thread_pool_3_fu_569_p3();
    void thread_pool_feature_address0();
    void thread_pool_feature_ce0();
    void thread_pool_feature_d0();
    void thread_pool_feature_we0();
    void thread_pr_fu_354_p2();
    void thread_r_fu_338_p2();
    void thread_sext_ln49_fu_457_p1();
    void thread_sext_ln53_fu_277_p1();
    void thread_sub_ln49_fu_390_p2();
    void thread_sub_ln53_1_fu_326_p2();
    void thread_sub_ln53_fu_271_p2();
    void thread_tmp_10_fu_287_p4();
    void thread_tmp_11_fu_396_p4();
    void thread_tmp_1_fu_378_p3();
    void thread_tmp_6_fu_489_p4();
    void thread_tmp_7_fu_507_p4();
    void thread_tmp_9_fu_259_p3();
    void thread_tmp_fu_247_p3();
    void thread_tmp_s_fu_366_p3();
    void thread_trunc_ln49_1_fu_517_p1();
    void thread_trunc_ln49_fu_499_p1();
    void thread_trunc_ln53_fu_306_p1();
    void thread_zext_ln46_fu_344_p1();
    void thread_zext_ln47_fu_426_p1();
    void thread_zext_ln49_1_fu_386_p1();
    void thread_zext_ln49_2_fu_448_p1();
    void thread_zext_ln49_fu_374_p1();
    void thread_zext_ln53_1_fu_267_p1();
    void thread_zext_ln53_2_fu_297_p1();
    void thread_zext_ln53_3_fu_406_p1();
    void thread_zext_ln53_4_fu_415_p1();
    void thread_zext_ln53_fu_255_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
