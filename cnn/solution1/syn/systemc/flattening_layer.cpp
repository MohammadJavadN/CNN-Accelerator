// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "flattening_layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic flattening_layer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic flattening_layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> flattening_layer::ap_ST_fsm_state1 = "1";
const sc_lv<5> flattening_layer::ap_ST_fsm_state2 = "10";
const sc_lv<5> flattening_layer::ap_ST_fsm_state3 = "100";
const sc_lv<5> flattening_layer::ap_ST_fsm_state4 = "1000";
const sc_lv<5> flattening_layer::ap_ST_fsm_state5 = "10000";
const sc_lv<32> flattening_layer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> flattening_layer::ap_const_lv32_1 = "1";
const sc_lv<1> flattening_layer::ap_const_lv1_0 = "0";
const sc_lv<32> flattening_layer::ap_const_lv32_2 = "10";
const sc_lv<32> flattening_layer::ap_const_lv32_3 = "11";
const sc_lv<32> flattening_layer::ap_const_lv32_4 = "100";
const sc_lv<4> flattening_layer::ap_const_lv4_0 = "0000";
const sc_lv<1> flattening_layer::ap_const_lv1_1 = "1";
const sc_lv<8> flattening_layer::ap_const_lv8_0 = "00000000";
const sc_lv<3> flattening_layer::ap_const_lv3_0 = "000";
const sc_lv<4> flattening_layer::ap_const_lv4_A = "1010";
const sc_lv<4> flattening_layer::ap_const_lv4_1 = "1";
const sc_lv<8> flattening_layer::ap_const_lv8_10 = "10000";
const sc_lv<2> flattening_layer::ap_const_lv2_0 = "00";
const sc_lv<3> flattening_layer::ap_const_lv3_4 = "100";
const sc_lv<3> flattening_layer::ap_const_lv3_1 = "1";
const sc_lv<8> flattening_layer::ap_const_lv8_4 = "100";
const sc_lv<8> flattening_layer::ap_const_lv8_1 = "1";
const bool flattening_layer::ap_const_boolean_1 = true;

flattening_layer::flattening_layer(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln16_1_fu_213_p2);
    sensitive << ( tmp_15_cast_reg_265 );
    sensitive << ( zext_ln16_1_fu_209_p1 );

    SC_METHOD(thread_add_ln16_fu_184_p2);
    sensitive << ( zext_ln13_reg_247 );
    sensitive << ( zext_ln16_fu_180_p1 );

    SC_METHOD(thread_add_ln17_1_fu_228_p2);
    sensitive << ( index_2_reg_110 );

    SC_METHOD(thread_add_ln17_fu_174_p2);
    sensitive << ( index_1_reg_88 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln12_fu_132_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln12_fu_132_p2 );

    SC_METHOD(thread_c_fu_203_p2);
    sensitive << ( c_0_reg_121 );

    SC_METHOD(thread_f_fu_138_p2);
    sensitive << ( f_0_reg_65 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln16_3_fu_223_p1 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_flat_array_d0);
    sensitive << ( pool_features2_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_flat_array_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp_ln12_fu_132_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( f_0_reg_65 );

    SC_METHOD(thread_icmp_ln13_fu_162_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( r_0_reg_99 );

    SC_METHOD(thread_icmp_ln14_fu_197_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( c_0_reg_121 );

    SC_METHOD(thread_index_fu_144_p2);
    sensitive << ( index_0_reg_76 );

    SC_METHOD(thread_pool_features2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln16_2_fu_218_p1 );

    SC_METHOD(thread_pool_features2_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_r_fu_168_p2);
    sensitive << ( r_0_reg_99 );

    SC_METHOD(thread_tmp_15_cast_fu_189_p3);
    sensitive << ( add_ln16_fu_184_p2 );

    SC_METHOD(thread_tmp_fu_150_p3);
    sensitive << ( f_0_reg_65 );

    SC_METHOD(thread_zext_ln13_fu_158_p1);
    sensitive << ( tmp_fu_150_p3 );

    SC_METHOD(thread_zext_ln16_1_fu_209_p1);
    sensitive << ( c_0_reg_121 );

    SC_METHOD(thread_zext_ln16_2_fu_218_p1);
    sensitive << ( add_ln16_1_fu_213_p2 );

    SC_METHOD(thread_zext_ln16_3_fu_223_p1);
    sensitive << ( index_2_reg_110 );

    SC_METHOD(thread_zext_ln16_fu_180_p1);
    sensitive << ( r_0_reg_99 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln12_fu_132_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_162_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln14_fu_197_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "flattening_layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, flat_array_address0, "(port)flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "(port)flat_array_ce0");
    sc_trace(mVcdFile, flat_array_we0, "(port)flat_array_we0");
    sc_trace(mVcdFile, flat_array_d0, "(port)flat_array_d0");
    sc_trace(mVcdFile, pool_features2_address0, "(port)pool_features2_address0");
    sc_trace(mVcdFile, pool_features2_ce0, "(port)pool_features2_ce0");
    sc_trace(mVcdFile, pool_features2_q0, "(port)pool_features2_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, f_fu_138_p2, "f_fu_138_p2");
    sc_trace(mVcdFile, f_reg_237, "f_reg_237");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, index_fu_144_p2, "index_fu_144_p2");
    sc_trace(mVcdFile, index_reg_242, "index_reg_242");
    sc_trace(mVcdFile, icmp_ln12_fu_132_p2, "icmp_ln12_fu_132_p2");
    sc_trace(mVcdFile, zext_ln13_fu_158_p1, "zext_ln13_fu_158_p1");
    sc_trace(mVcdFile, zext_ln13_reg_247, "zext_ln13_reg_247");
    sc_trace(mVcdFile, r_fu_168_p2, "r_fu_168_p2");
    sc_trace(mVcdFile, r_reg_255, "r_reg_255");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln17_fu_174_p2, "add_ln17_fu_174_p2");
    sc_trace(mVcdFile, add_ln17_reg_260, "add_ln17_reg_260");
    sc_trace(mVcdFile, icmp_ln13_fu_162_p2, "icmp_ln13_fu_162_p2");
    sc_trace(mVcdFile, tmp_15_cast_fu_189_p3, "tmp_15_cast_fu_189_p3");
    sc_trace(mVcdFile, tmp_15_cast_reg_265, "tmp_15_cast_reg_265");
    sc_trace(mVcdFile, c_fu_203_p2, "c_fu_203_p2");
    sc_trace(mVcdFile, c_reg_273, "c_reg_273");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln14_fu_197_p2, "icmp_ln14_fu_197_p2");
    sc_trace(mVcdFile, add_ln17_1_fu_228_p2, "add_ln17_1_fu_228_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, f_0_reg_65, "f_0_reg_65");
    sc_trace(mVcdFile, index_0_reg_76, "index_0_reg_76");
    sc_trace(mVcdFile, index_1_reg_88, "index_1_reg_88");
    sc_trace(mVcdFile, r_0_reg_99, "r_0_reg_99");
    sc_trace(mVcdFile, index_2_reg_110, "index_2_reg_110");
    sc_trace(mVcdFile, c_0_reg_121, "c_0_reg_121");
    sc_trace(mVcdFile, zext_ln16_2_fu_218_p1, "zext_ln16_2_fu_218_p1");
    sc_trace(mVcdFile, zext_ln16_3_fu_223_p1, "zext_ln16_3_fu_223_p1");
    sc_trace(mVcdFile, tmp_fu_150_p3, "tmp_fu_150_p3");
    sc_trace(mVcdFile, zext_ln16_fu_180_p1, "zext_ln16_fu_180_p1");
    sc_trace(mVcdFile, add_ln16_fu_184_p2, "add_ln16_fu_184_p2");
    sc_trace(mVcdFile, zext_ln16_1_fu_209_p1, "zext_ln16_1_fu_209_p1");
    sc_trace(mVcdFile, add_ln16_1_fu_213_p2, "add_ln16_1_fu_213_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

flattening_layer::~flattening_layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void flattening_layer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_0_reg_121 = c_reg_273.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_162_p2.read()))) {
        c_0_reg_121 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_162_p2.read(), ap_const_lv1_1))) {
        f_0_reg_65 = f_reg_237.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        f_0_reg_65 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_162_p2.read(), ap_const_lv1_1))) {
        index_0_reg_76 = index_reg_242.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        index_0_reg_76 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_197_p2.read(), ap_const_lv1_1))) {
        index_1_reg_88 = add_ln17_reg_260.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln12_fu_132_p2.read(), ap_const_lv1_0))) {
        index_1_reg_88 = index_0_reg_76.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        index_2_reg_110 = add_ln17_1_fu_228_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_162_p2.read()))) {
        index_2_reg_110 = index_1_reg_88.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_197_p2.read(), ap_const_lv1_1))) {
        r_0_reg_99 = r_reg_255.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln12_fu_132_p2.read(), ap_const_lv1_0))) {
        r_0_reg_99 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_162_p2.read()))) {
        add_ln17_reg_260 = add_ln17_fu_174_p2.read();
        tmp_15_cast_reg_265 = tmp_15_cast_fu_189_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_reg_273 = c_fu_203_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        f_reg_237 = f_fu_138_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln12_fu_132_p2.read(), ap_const_lv1_0))) {
        index_reg_242 = index_fu_144_p2.read();
        zext_ln13_reg_247 = zext_ln13_fu_158_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_reg_255 = r_fu_168_p2.read();
    }
}

void flattening_layer::thread_add_ln16_1_fu_213_p2() {
    add_ln16_1_fu_213_p2 = (!tmp_15_cast_reg_265.read().is_01() || !zext_ln16_1_fu_209_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_15_cast_reg_265.read()) + sc_biguint<9>(zext_ln16_1_fu_209_p1.read()));
}

void flattening_layer::thread_add_ln16_fu_184_p2() {
    add_ln16_fu_184_p2 = (!zext_ln16_fu_180_p1.read().is_01() || !zext_ln13_reg_247.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln16_fu_180_p1.read()) + sc_biguint<7>(zext_ln13_reg_247.read()));
}

void flattening_layer::thread_add_ln17_1_fu_228_p2() {
    add_ln17_1_fu_228_p2 = (!index_2_reg_110.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(index_2_reg_110.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void flattening_layer::thread_add_ln17_fu_174_p2() {
    add_ln17_fu_174_p2 = (!index_1_reg_88.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<8>(): (sc_biguint<8>(index_1_reg_88.read()) + sc_biguint<8>(ap_const_lv8_4));
}

void flattening_layer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void flattening_layer::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void flattening_layer::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void flattening_layer::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void flattening_layer::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void flattening_layer::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln12_fu_132_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void flattening_layer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void flattening_layer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln12_fu_132_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void flattening_layer::thread_c_fu_203_p2() {
    c_fu_203_p2 = (!c_0_reg_121.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(c_0_reg_121.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void flattening_layer::thread_f_fu_138_p2() {
    f_fu_138_p2 = (!f_0_reg_65.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(f_0_reg_65.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void flattening_layer::thread_flat_array_address0() {
    flat_array_address0 =  (sc_lv<8>) (zext_ln16_3_fu_223_p1.read());
}

void flattening_layer::thread_flat_array_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        flat_array_ce0 = ap_const_logic_1;
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void flattening_layer::thread_flat_array_d0() {
    flat_array_d0 = pool_features2_q0.read();
}

void flattening_layer::thread_flat_array_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        flat_array_we0 = ap_const_logic_1;
    } else {
        flat_array_we0 = ap_const_logic_0;
    }
}

void flattening_layer::thread_icmp_ln12_fu_132_p2() {
    icmp_ln12_fu_132_p2 = (!f_0_reg_65.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(f_0_reg_65.read() == ap_const_lv4_A);
}

void flattening_layer::thread_icmp_ln13_fu_162_p2() {
    icmp_ln13_fu_162_p2 = (!r_0_reg_99.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_99.read() == ap_const_lv3_4);
}

void flattening_layer::thread_icmp_ln14_fu_197_p2() {
    icmp_ln14_fu_197_p2 = (!c_0_reg_121.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_121.read() == ap_const_lv3_4);
}

void flattening_layer::thread_index_fu_144_p2() {
    index_fu_144_p2 = (!index_0_reg_76.read().is_01() || !ap_const_lv8_10.is_01())? sc_lv<8>(): (sc_biguint<8>(index_0_reg_76.read()) + sc_biguint<8>(ap_const_lv8_10));
}

void flattening_layer::thread_pool_features2_address0() {
    pool_features2_address0 =  (sc_lv<8>) (zext_ln16_2_fu_218_p1.read());
}

void flattening_layer::thread_pool_features2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        pool_features2_ce0 = ap_const_logic_1;
    } else {
        pool_features2_ce0 = ap_const_logic_0;
    }
}

void flattening_layer::thread_r_fu_168_p2() {
    r_fu_168_p2 = (!r_0_reg_99.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(r_0_reg_99.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void flattening_layer::thread_tmp_15_cast_fu_189_p3() {
    tmp_15_cast_fu_189_p3 = esl_concat<7,2>(add_ln16_fu_184_p2.read(), ap_const_lv2_0);
}

void flattening_layer::thread_tmp_fu_150_p3() {
    tmp_fu_150_p3 = esl_concat<4,2>(f_0_reg_65.read(), ap_const_lv2_0);
}

void flattening_layer::thread_zext_ln13_fu_158_p1() {
    zext_ln13_fu_158_p1 = esl_zext<7,6>(tmp_fu_150_p3.read());
}

void flattening_layer::thread_zext_ln16_1_fu_209_p1() {
    zext_ln16_1_fu_209_p1 = esl_zext<9,3>(c_0_reg_121.read());
}

void flattening_layer::thread_zext_ln16_2_fu_218_p1() {
    zext_ln16_2_fu_218_p1 = esl_zext<64,9>(add_ln16_1_fu_213_p2.read());
}

void flattening_layer::thread_zext_ln16_3_fu_223_p1() {
    zext_ln16_3_fu_223_p1 = esl_zext<64,8>(index_2_reg_110.read());
}

void flattening_layer::thread_zext_ln16_fu_180_p1() {
    zext_ln16_fu_180_p1 = esl_zext<7,3>(r_0_reg_99.read());
}

void flattening_layer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln12_fu_132_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_162_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln14_fu_197_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

